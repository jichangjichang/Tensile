/*******************************************************************************
* Copyright (C) 2016-2020 Advanced Micro Devices, Inc. All rights reserved.
*
* Permission is hereby granted, free of charge, to any person obtaining a copy
* of this software and associated documentation files (the "Software"), to deal
* in the Software without restriction, including without limitation the rights
* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell cop-
* ies of the Software, and to permit persons to whom the Software is furnished
* to do so, subject to the following conditions:
*
* The above copyright notice and this permission notice shall be included in all
* copies or substantial portions of the Software.
*
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IM-
* PLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
* FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
* COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
* IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNE-
* CTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
*******************************************************************************/

/**************************************************
* This file was generated by Tensile:             *
* https://github.com/ROCmSoftwarePlatform/Tensile *
**************************************************/


#include "TensileTypes.h"
#include "SolutionHelper.h"
#include "Tools.h"
#include <unistd.h>
#include "Kernels.h"

// solution pointer
typedef TensileStatus (*TensileSolutionPointer_Cij_Alik_Bljk_S)(
    SolutionLock * solutionLock,
    float * dataD,
    const float * dataC,
    const float * dataA,
    const float * dataB,
    float alpha,
    unsigned int strideD1J,
    unsigned int strideC1J,
    unsigned int strideA1I,
    unsigned int strideA2K,
    unsigned int strideB1J,
    unsigned int strideB2K,
    unsigned int sizeI,
    unsigned int sizeJ,
    unsigned int sizeK,
    unsigned int sizeL,
    hipStream_t stream,
    unsigned int numInputEvents,
    hipEvent_t * inputEvents,
    hipEvent_t * outputEvent);


TensileStatus Cij_Alik_Bljk_S_MT32x32x8_SE_ASEM1_PSD0(
    SolutionLock * solutionLock,
    float * dataD,
    const float * dataC,
    const float * dataA,
    const float * dataB,
    float alpha,
    unsigned int strideD1J,
    unsigned int strideC1J,
    unsigned int strideA1I,
    unsigned int strideA2K,
    unsigned int strideB1J,
    unsigned int strideB2K,
    unsigned int sizeI,
    unsigned int sizeJ,
    unsigned int sizeK,
    unsigned int sizeL,
    hipStream_t stream,
    unsigned int numInputEvents,
    hipEvent_t * inputEvents,
    hipEvent_t * outputEvent);


TensileStatus Cij_Alik_Bljk_S_MT32x32x8_SE_ASEM8_PSD1(
    SolutionLock * solutionLock,
    float * dataD,
    const float * dataC,
    const float * dataA,
    const float * dataB,
    float alpha,
    unsigned int strideD1J,
    unsigned int strideC1J,
    unsigned int strideA1I,
    unsigned int strideA2K,
    unsigned int strideB1J,
    unsigned int strideB2K,
    unsigned int sizeI,
    unsigned int sizeJ,
    unsigned int sizeK,
    unsigned int sizeL,
    hipStream_t stream,
    unsigned int numInputEvents,
    hipEvent_t * inputEvents,
    hipEvent_t * outputEvent);


