
/home/jimmyc/workspace/fp16_kgen/Tensile/train_fp16/2sum_simple/1_BenchmarkProblems/Cij_Alik_Bljk_S_00/00_Final/source/build_tmp/SOURCETMP/code_object_tmp/Kernels.so-000-gfx908.hsaco:	file format ELF64-amdgpu


Disassembly of section .text:

0000000000003100 Cij_Alik_Bljk_S_MT32x32x8_SE_ASEM1_K1_PSD0:
	v_mov_b32_e32 v1, s4                                       // 000000003100: 7E020204
	v_mov_b32_e32 v2, s5                                       // 000000003104: 7E040205
	s_load_dword s0, s[4:5], 0x4                               // 000000003108: C0020002 00000004
	global_load_ushort v2, v[1:2], off offset:6                // 000000003110: DC488006 027F0001
	s_load_dwordx2 s[20:21], s[4:5], 0xc                       // 000000003118: C0060502 0000000C
	s_load_dwordx2 s[10:11], s[6:7], 0x20                      // 000000003120: C0060283 00000020
	s_mov_b32 s1, 0x4f800000                                   // 000000003128: BE8100FF 4F800000
	s_waitcnt lgkmcnt(0)                                       // 000000003130: BF8CC07F
	s_and_b32 s0, s0, 0xffff                                   // 000000003134: 8600FF00 0000FFFF
	v_cvt_f32_u32_e32 v1, s0                                   // 00000000313C: 7E020C00
	s_and_b32 s4, s9, 7                                        // 000000003140: 86048709
	s_load_dwordx8 s[12:19], s[6:7], 0x2c                      // 000000003144: C00E0303 0000002C
	v_rcp_iflag_f32_e32 v1, v1                                 // 00000000314C: 7E024701
	v_mul_f32_e32 v1, s1, v1                                   // 000000003150: 0A020201
	v_cvt_u32_f32_e32 v1, v1                                   // 000000003154: 7E020F01
	v_mul_lo_u32 v3, v1, s0                                    // 000000003158: D2850003 00000101
	v_mul_hi_u32 v4, v1, s0                                    // 000000003160: D2860004 00000101
	v_sub_u32_e32 v5, 0, v3                                    // 000000003168: 6A0A0680
	v_cmp_eq_u32_e32 vcc, 0, v4                                // 00000000316C: 7D940880
	v_cndmask_b32_e32 v3, v3, v5, vcc                          // 000000003170: 00060B03
	v_mul_hi_u32 v3, v3, v1                                    // 000000003174: D2860003 00020303
	v_add_u32_e32 v4, v1, v3                                   // 00000000317C: 68080701
	v_sub_u32_e32 v1, v1, v3                                   // 000000003180: 6A020701
	v_cndmask_b32_e32 v1, v1, v4, vcc                          // 000000003184: 00020901
	v_mul_hi_u32 v1, v1, s20                                   // 000000003188: D2860001 00002901
	v_mul_lo_u32 v4, v1, s0                                    // 000000003190: D2850004 00000101
	v_add_u32_e32 v6, -1, v1                                   // 000000003198: 680C02C1
	v_sub_u32_e32 v7, s20, v4                                  // 00000000319C: 6A0E0814
	v_cmp_ge_u32_e32 vcc, s20, v4                              // 0000000031A0: 7D9C0814
	s_waitcnt vmcnt(0)                                         // 0000000031A4: BF8C0F70
	v_cvt_f32_u32_e32 v5, v2                                   // 0000000031A8: 7E0A0D02
	v_rcp_iflag_f32_e32 v3, v5                                 // 0000000031AC: 7E064705
	v_add_u32_e32 v5, 1, v1                                    // 0000000031B0: 680A0281
	v_mul_f32_e32 v3, s1, v3                                   // 0000000031B4: 0A060601
	v_cvt_u32_f32_e32 v3, v3                                   // 0000000031B8: 7E060F03
	v_cmp_le_u32_e64 s[0:1], s0, v7                            // 0000000031BC: D0CB0000 00020E00
	s_and_b64 s[0:1], s[0:1], vcc                              // 0000000031C4: 86806A00
	v_cndmask_b32_e64 v1, v1, v5, s[0:1]                       // 0000000031C8: D1000001 00020B01
	v_mul_lo_u32 v8, v3, v2                                    // 0000000031D0: D2850008 00020503
	v_mul_hi_u32 v9, v3, v2                                    // 0000000031D8: D2860009 00020503
	v_cndmask_b32_e32 v1, v6, v1, vcc                          // 0000000031E0: 00020306
	v_mul_lo_u32 v1, v1, s4                                    // 0000000031E4: D2850001 00000901
	v_sub_u32_e32 v4, 0, v8                                    // 0000000031EC: 6A081080
	v_cmp_eq_u32_e64 s[2:3], 0, v9                             // 0000000031F0: D0CA0002 00021280
	v_cndmask_b32_e64 v4, v8, v4, s[2:3]                       // 0000000031F8: D1000004 000A0908
	v_mul_hi_u32 v4, v4, v3                                    // 000000003200: D2860004 00020704
	v_add_u32_e32 v1, s8, v1                                   // 000000003208: 68020208
	v_add_u32_e32 v5, v3, v4                                   // 00000000320C: 680A0903
	v_sub_u32_e32 v3, v3, v4                                   // 000000003210: 6A060903
	v_cndmask_b32_e64 v3, v3, v5, s[2:3]                       // 000000003214: D1000003 000A0B03
	v_mul_hi_u32 v3, v3, s21                                   // 00000000321C: D2860003 00002B03
	v_mul_lo_u32 v4, v3, v2                                    // 000000003224: D2850004 00020503
	v_add_u32_e32 v5, 1, v3                                    // 00000000322C: 680A0681
	v_add_u32_e32 v6, -1, v3                                   // 000000003230: 680C06C1
	v_sub_u32_e32 v7, s21, v4                                  // 000000003234: 6A0E0815
	v_cmp_ge_u32_e32 vcc, s21, v4                              // 000000003238: 7D9C0815
	v_cmp_ge_u32_e64 s[0:1], v7, v2                            // 00000000323C: D0CE0000 00020507
	s_and_b64 s[0:1], s[0:1], vcc                              // 000000003244: 86806A00
	v_cndmask_b32_e64 v2, v3, v5, s[0:1]                       // 000000003248: D1000002 00020B03
	v_cndmask_b32_e32 v3, v6, v2, vcc                          // 000000003250: 00060506
	v_and_b32_e32 v2, 7, v3                                    // 000000003254: 26040687
	v_sub_u32_e32 v3, v3, v2                                   // 000000003258: 6A060503
	v_cmp_ge_u32_e32 vcc, s9, v3                               // 00000000325C: 7D9C0609
	v_cmp_ne_u32_e64 s[0:1], 0, v2                             // 000000003260: D0CD0000 00020480
	s_and_b64 s[0:1], s[0:1], vcc                              // 000000003268: 86806A00
	s_and_b64 vcc, exec, s[0:1]                                // 00000000326C: 86EA007E
	s_cbranch_vccnz BB0_2                                      // 000000003270: BF870004
	v_lshrrev_b32_e32 v3, 3, v1                                // 000000003274: 20060283
	s_and_b32 s0, s9, -8                                       // 000000003278: 8600C809
	v_and_b32_e32 v1, 7, v1                                    // 00000000327C: 26020287
	s_branch BB0_16                                            // 000000003280: BF820041

0000000000003284 BB0_2:
	v_cmp_gt_i32_e32 vcc, 4, v2                                // 000000003284: 7D880484
	s_and_b64 vcc, exec, vcc                                   // 000000003288: 86EA6A7E
	s_cbranch_vccz BB0_5                                       // 00000000328C: BF860006
	v_cmp_gt_i32_e32 vcc, 2, v2                                // 000000003290: 7D880482
	s_and_b64 vcc, exec, vcc                                   // 000000003294: 86EA6A7E
	s_cbranch_vccz BB0_7                                       // 000000003298: BF86000A
	s_and_b32 s0, s9, -8                                       // 00000000329C: 8600C809
	v_mov_b32_e32 v2, s0                                       // 0000000032A0: 7E040200
	s_branch BB0_17                                            // 0000000032A4: BF82003A

00000000000032a8 BB0_5:
	v_cmp_gt_i32_e32 vcc, 5, v2                                // 0000000032A8: 7D880485
	s_and_b64 vcc, exec, vcc                                   // 0000000032AC: 86EA6A7E
	s_cbranch_vccz BB0_9                                       // 0000000032B0: BF86000B
	v_lshrrev_b32_e32 v3, 2, v1                                // 0000000032B4: 20060282
	v_and_b32_e32 v1, 3, v1                                    // 0000000032B8: 26020283
	s_and_b32 s0, s9, -8                                       // 0000000032BC: 8600C809
	s_branch BB0_16                                            // 0000000032C0: BF820031

00000000000032c4 BB0_7:
	v_cmp_gt_i32_e32 vcc, 3, v2                                // 0000000032C4: 7D880483
	s_and_b64 vcc, exec, vcc                                   // 0000000032C8: 86EA6A7E
	s_cbranch_vccz BB0_11                                      // 0000000032CC: BF86000F
	v_lshrrev_b32_e32 v3, 1, v1                                // 0000000032D0: 20060281
	v_and_b32_e32 v1, 1, v1                                    // 0000000032D4: 26020281
	s_and_b32 s0, s9, -8                                       // 0000000032D8: 8600C809
	s_branch BB0_16                                            // 0000000032DC: BF82002A

00000000000032e0 BB0_9:
	v_cmp_gt_i32_e32 vcc, 6, v2                                // 0000000032E0: 7D880486
	s_and_b64 vcc, exec, vcc                                   // 0000000032E4: 86EA6A7E
	s_cbranch_vccz BB0_12                                      // 0000000032E8: BF860010
	s_mov_b32 s0, 0xcccccccd                                   // 0000000032EC: BE8000FF CCCCCCCD
	v_mul_hi_u32 v2, v1, s0                                    // 0000000032F4: D2860002 00000101
	v_lshrrev_b32_e32 v3, 2, v2                                // 0000000032FC: 20060482
	v_mul_lo_u32 v2, v3, -5                                    // 000000003300: D2850002 00018B03
	s_branch BB0_15                                            // 000000003308: BF82001D

000000000000330c BB0_11:
	s_mov_b32 s0, 0xaaaaaaab                                   // 00000000330C: BE8000FF AAAAAAAB
	v_mul_hi_u32 v2, v1, s0                                    // 000000003314: D2860002 00000101
	v_lshrrev_b32_e32 v3, 1, v2                                // 00000000331C: 20060481
	v_mul_lo_u32 v2, v3, -3                                    // 000000003320: D2850002 00018703
	s_branch BB0_15                                            // 000000003328: BF820015

000000000000332c BB0_12:
	v_cmp_eq_u32_e32 vcc, 6, v2                                // 00000000332C: 7D940486
	s_and_b64 vcc, exec, vcc                                   // 000000003330: 86EA6A7E
	s_cbranch_vccz BB0_14                                      // 000000003334: BF860008
	s_mov_b32 s0, 0xaaaaaaab                                   // 000000003338: BE8000FF AAAAAAAB
	v_mul_hi_u32 v2, v1, s0                                    // 000000003340: D2860002 00000101
	v_lshrrev_b32_e32 v3, 2, v2                                // 000000003348: 20060482
	v_mul_lo_u32 v2, v3, -6                                    // 00000000334C: D2850002 00018D03
	s_branch BB0_15                                            // 000000003354: BF82000A

0000000000003358 BB0_14:
	s_mov_b32 s0, 0x24924925                                   // 000000003358: BE8000FF 24924925
	v_mul_hi_u32 v2, v1, s0                                    // 000000003360: D2860002 00000101
	v_sub_u32_e32 v3, v1, v2                                   // 000000003368: 6A060501
	v_lshrrev_b32_e32 v3, 1, v3                                // 00000000336C: 20060681
	v_add_u32_e32 v2, v3, v2                                   // 000000003370: 68040503
	v_lshrrev_b32_e32 v3, 2, v2                                // 000000003374: 20060482
	v_mul_lo_u32 v2, v3, -7                                    // 000000003378: D2850002 00018F03

0000000000003380 BB0_15:
	s_and_b32 s0, s9, -8                                       // 000000003380: 8600C809
	v_add_u32_e32 v1, v2, v1                                   // 000000003384: 68020302

0000000000003388 BB0_16:
	v_or_b32_e32 v2, s0, v1                                    // 000000003388: 28040200
	v_mov_b32_e32 v1, v3                                       // 00000000338C: 7E020303

0000000000003390 BB0_17:
	s_load_dwordx2 s[20:21], s[6:7], 0x0                       // 000000003390: C0060503 00000000
	v_lshrrev_b32_e32 v39, 3, v0                               // 000000003398: 204E0083
	v_mov_b32_e32 v38, 0                                       // 00000000339C: 7E4C0280
	v_lshl_add_u32 v10, v2, 5, v39                             // 0000000033A0: D1FD000A 049D0B02
	v_lshlrev_b32_e32 v14, 5, v1                               // 0000000033A8: 241C0285
	v_and_b32_e32 v13, 7, v0                                   // 0000000033AC: 261A0087
	v_add_u32_e32 v5, 8, v10                                   // 0000000033B0: 680A1488
	v_add_u32_e32 v4, 16, v10                                  // 0000000033B4: 68081490
	v_add_u32_e32 v1, 24, v10                                  // 0000000033B8: 68021498
	s_waitcnt lgkmcnt(0)                                       // 0000000033BC: BF8CC07F
	s_cmp_lt_i32 s18, 1                                        // 0000000033C0: BF048112
	v_mov_b32_e32 v33, v38                                     // 0000000033C4: 7E420326
	v_mov_b32_e32 v30, v38                                     // 0000000033C8: 7E3C0326
	v_mov_b32_e32 v25, v38                                     // 0000000033CC: 7E320326
	v_mov_b32_e32 v22, v38                                     // 0000000033D0: 7E2C0326
	v_mov_b32_e32 v17, v38                                     // 0000000033D4: 7E220326
	v_mov_b32_e32 v16, v38                                     // 0000000033D8: 7E200326
	v_mov_b32_e32 v15, v38                                     // 0000000033DC: 7E1E0326
	v_mov_b32_e32 v12, v38                                     // 0000000033E0: 7E180326
	v_mov_b32_e32 v11, v38                                     // 0000000033E4: 7E160326
	v_mov_b32_e32 v9, v38                                      // 0000000033E8: 7E120326
	v_mov_b32_e32 v8, v38                                      // 0000000033EC: 7E100326
	v_mov_b32_e32 v7, v38                                      // 0000000033F0: 7E0E0326
	v_mov_b32_e32 v6, v38                                      // 0000000033F4: 7E0C0326
	v_mov_b32_e32 v2, v38                                      // 0000000033F8: 7E040326
	v_mov_b32_e32 v3, v38                                      // 0000000033FC: 7E060326
	s_cbranch_scc1 BB0_29                                      // 000000003400: BF850234
	s_add_i32 s5, s17, -1                                      // 000000003404: 8105C111
	v_min_u32_e32 v2, s5, v1                                   // 000000003408: 1C040205
	v_mul_lo_u32 v2, v2, s14                                   // 00000000340C: D2850002 00001D02
	s_load_dwordx2 s[0:1], s[6:7], 0x10                        // 000000003414: C0060003 00000010
	s_load_dwordx2 s[2:3], s[6:7], 0x18                        // 00000000341C: C0060083 00000018
	v_min_u32_e32 v11, s5, v4                                  // 000000003424: 1C160805
	v_mov_b32_e32 v3, 0                                        // 000000003428: 7E060280
	v_add_u32_e32 v2, v2, v13                                  // 00000000342C: 68041B02
	v_mul_lo_u32 v11, v11, s14                                 // 000000003430: D285000B 00001D0B
	v_lshlrev_b64 v[6:7], 2, v[2:3]                            // 000000003438: D28F0006 00020482
	s_waitcnt lgkmcnt(0)                                       // 000000003440: BF8CC07F
	v_mov_b32_e32 v2, s3                                       // 000000003444: 7E040203
	v_add_co_u32_e32 v18, vcc, s2, v6                          // 000000003448: 32240C02
	v_addc_co_u32_e32 v19, vcc, v2, v7, vcc                    // 00000000344C: 38260F02
	v_add_u32_e32 v2, v11, v13                                 // 000000003450: 68041B0B
	v_min_u32_e32 v11, s5, v5                                  // 000000003454: 1C160A05
	v_mul_lo_u32 v11, v11, s14                                 // 000000003458: D285000B 00001D0B
	v_lshlrev_b64 v[6:7], 2, v[2:3]                            // 000000003460: D28F0006 00020482
	v_mov_b32_e32 v2, s3                                       // 000000003468: 7E040203
	v_add_co_u32_e32 v20, vcc, s2, v6                          // 00000000346C: 32280C02
	v_addc_co_u32_e32 v21, vcc, v2, v7, vcc                    // 000000003470: 382A0F02
	v_add_u32_e32 v2, v11, v13                                 // 000000003474: 68041B0B
	v_min_u32_e32 v11, s5, v10                                 // 000000003478: 1C161405
	v_mul_lo_u32 v11, v11, s14                                 // 00000000347C: D285000B 00001D0B
	v_lshlrev_b64 v[6:7], 2, v[2:3]                            // 000000003484: D28F0006 00020482
	v_add_u32_e32 v8, v14, v39                                 // 00000000348C: 68104F0E
	v_mov_b32_e32 v2, s3                                       // 000000003490: 7E040203
	v_add_co_u32_e32 v23, vcc, s2, v6                          // 000000003494: 322E0C02
	v_addc_co_u32_e32 v24, vcc, v2, v7, vcc                    // 000000003498: 38300F02
	v_add_u32_e32 v2, v11, v13                                 // 00000000349C: 68041B0B
	s_add_i32 s4, s16, -1                                      // 0000000034A0: 8104C110
	v_add_u32_e32 v11, 24, v8                                  // 0000000034A4: 68161098
	v_min_u32_e32 v11, s4, v11                                 // 0000000034A8: 1C161604
	v_mul_lo_u32 v11, v11, s12                                 // 0000000034AC: D285000B 0000190B
	v_lshlrev_b64 v[6:7], 2, v[2:3]                            // 0000000034B4: D28F0006 00020482
	v_mov_b32_e32 v2, s3                                       // 0000000034BC: 7E040203
	v_add_co_u32_e32 v26, vcc, s2, v6                          // 0000000034C0: 32340C02
	v_addc_co_u32_e32 v27, vcc, v2, v7, vcc                    // 0000000034C4: 38360F02
	v_add_u32_e32 v2, v11, v13                                 // 0000000034C8: 68041B0B
	v_lshlrev_b64 v[6:7], 2, v[2:3]                            // 0000000034CC: D28F0006 00020482
	v_add_u32_e32 v2, 16, v8                                   // 0000000034D4: 68041090
	v_min_u32_e32 v2, s4, v2                                   // 0000000034D8: 1C040404
	v_mul_lo_u32 v2, v2, s12                                   // 0000000034DC: D2850002 00001902
	v_add_u32_e32 v9, 8, v8                                    // 0000000034E4: 68121088
	v_mov_b32_e32 v11, s1                                      // 0000000034E8: 7E160201
	v_add_co_u32_e32 v28, vcc, s0, v6                          // 0000000034EC: 32380C00
	v_add_u32_e32 v2, v2, v13                                  // 0000000034F0: 68041B02
	v_addc_co_u32_e32 v29, vcc, v11, v7, vcc                   // 0000000034F4: 383A0F0B
	v_lshlrev_b64 v[6:7], 2, v[2:3]                            // 0000000034F8: D28F0006 00020482
	v_min_u32_e32 v2, s4, v9                                   // 000000003500: 1C041204
	v_mul_lo_u32 v2, v2, s12                                   // 000000003504: D2850002 00001902
	v_add_co_u32_e32 v31, vcc, s0, v6                          // 00000000350C: 323E0C00
	v_addc_co_u32_e32 v32, vcc, v11, v7, vcc                   // 000000003510: 38400F0B
	v_mov_b32_e32 v9, s1                                       // 000000003514: 7E120201
	v_add_u32_e32 v2, v2, v13                                  // 000000003518: 68041B02
	v_lshlrev_b64 v[6:7], 2, v[2:3]                            // 00000000351C: D28F0006 00020482
	v_min_u32_e32 v2, s4, v8                                   // 000000003524: 1C041004
	v_mul_lo_u32 v2, v2, s12                                   // 000000003528: D2850002 00001902
	v_add_co_u32_e32 v34, vcc, s0, v6                          // 000000003530: 32440C00
	v_addc_co_u32_e32 v35, vcc, v9, v7, vcc                    // 000000003534: 38460F09
	s_lshr_b32 s5, s19, 3                                      // 000000003538: 8F058313
	v_add_u32_e32 v2, v2, v13                                  // 00000000353C: 68041B02
	v_lshlrev_b64 v[6:7], 2, v[2:3]                            // 000000003540: D28F0006 00020482
	v_lshrrev_b32_e32 v0, 1, v0                                // 000000003548: 20000081
	v_add_co_u32_e32 v36, vcc, s0, v6                          // 00000000354C: 32480C00
	s_and_b32 s0, s19, -8                                      // 000000003550: 8600C813
	s_sub_u32 s2, s13, s0                                      // 000000003554: 8082000D
	v_and_b32_e32 v2, 0x1e0, v0                                // 000000003558: 260400FF 000001E0
	s_subb_u32 s3, 0, 0                                        // 000000003560: 82838080
	v_and_or_b32 v6, v39, 7, v2                                // 000000003564: D2010006 04090F27
	s_sub_u32 s22, s15, s0                                     // 00000000356C: 8096000F
	s_subb_u32 s23, 0, 0                                       // 000000003570: 82978080
	v_lshlrev_b32_e32 v0, 5, v13                               // 000000003574: 24001A85
	s_and_b32 s12, s19, 7                                      // 000000003578: 860C8713
	v_mov_b32_e32 v8, s1                                       // 00000000357C: 7E100201
	v_lshlrev_b32_e32 v40, 2, v6                               // 000000003580: 24500C82
	s_movk_i32 s4, 0x400                                       // 000000003584: B0040400
	v_or_b32_e32 v2, v2, v13                                   // 000000003588: 28041B02
	v_addc_co_u32_e32 v37, vcc, v8, v7, vcc                    // 00000000358C: 384A0F08
	v_add_lshl_u32 v0, v0, v39, 2                              // 000000003590: D1FE0000 020A4F00
	v_lshlrev_b32_e32 v39, 2, v2                               // 000000003598: 244E0482
	v_cmp_eq_u32_e64 s[6:7], s5, 0                             // 00000000359C: D0CA0006 00010005
	v_cmp_gt_u32_e64 s[0:1], s12, v13                          // 0000000035A4: D0CC0000 00021A0C
	v_cmp_eq_u32_e64 s[8:9], s12, 0                            // 0000000035AC: D0CA0008 0001000C
	s_add_i32 s5, s5, 1                                        // 0000000035B4: 81058105
	s_add_i32 s12, s12, 1                                      // 0000000035B8: 810C810C
	s_lshl_b64 s[14:15], s[2:3], 2                             // 0000000035BC: 8E8E8202
	s_lshl_b64 s[22:23], s[22:23], 2                           // 0000000035C0: 8E968216
	s_movk_i32 s13, 0x80                                       // 0000000035C4: B00D0080
	s_movk_i32 s19, 0x440                                      // 0000000035C8: B0130440
	v_add_u32_e32 v41, s4, v40                                 // 0000000035CC: 68525004
	v_mov_b32_e32 v42, s18                                     // 0000000035D0: 7E540212
	v_mov_b32_e32 v2, v3                                       // 0000000035D4: 7E040303
	v_mov_b32_e32 v6, v3                                       // 0000000035D8: 7E0C0303
	v_mov_b32_e32 v7, v3                                       // 0000000035DC: 7E0E0303
	v_mov_b32_e32 v8, v3                                       // 0000000035E0: 7E100303
	v_mov_b32_e32 v9, v3                                       // 0000000035E4: 7E120303
	v_mov_b32_e32 v11, v3                                      // 0000000035E8: 7E160303
	v_mov_b32_e32 v12, v3                                      // 0000000035EC: 7E180303
	v_mov_b32_e32 v15, v3                                      // 0000000035F0: 7E1E0303
	v_mov_b32_e32 v16, v3                                      // 0000000035F4: 7E200303
	v_mov_b32_e32 v17, v3                                      // 0000000035F8: 7E220303
	v_mov_b32_e32 v22, v3                                      // 0000000035FC: 7E2C0303
	v_mov_b32_e32 v25, v3                                      // 000000003600: 7E320303
	v_mov_b32_e32 v30, v3                                      // 000000003604: 7E3C0303
	v_mov_b32_e32 v33, v3                                      // 000000003608: 7E420303
	v_mov_b32_e32 v38, v3                                      // 00000000360C: 7E4C0303
	s_branch BB0_20                                            // 000000003610: BF820017

0000000000003614 BB0_19:
	v_mov_b32_e32 v44, s15                                     // 000000003614: 7E58020F
	v_add_co_u32_e32 v36, vcc, s14, v36                        // 000000003618: 3248480E
	v_addc_co_u32_e32 v37, vcc, v37, v44, vcc                  // 00000000361C: 384A5925
	v_add_co_u32_e32 v34, vcc, s14, v34                        // 000000003620: 3244440E
	v_addc_co_u32_e32 v35, vcc, v35, v44, vcc                  // 000000003624: 38465923
	v_add_co_u32_e32 v31, vcc, s14, v31                        // 000000003628: 323E3E0E
	v_addc_co_u32_e32 v32, vcc, v32, v44, vcc                  // 00000000362C: 38405920
	v_add_co_u32_e32 v28, vcc, s14, v28                        // 000000003630: 3238380E
	v_addc_co_u32_e32 v29, vcc, v29, v44, vcc                  // 000000003634: 383A591D
	v_mov_b32_e32 v44, s23                                     // 000000003638: 7E580217
	v_add_co_u32_e32 v26, vcc, s22, v26                        // 00000000363C: 32343416
	v_addc_co_u32_e32 v27, vcc, v27, v44, vcc                  // 000000003640: 3836591B
	v_add_co_u32_e32 v23, vcc, s22, v23                        // 000000003644: 322E2E16
	v_addc_co_u32_e32 v24, vcc, v24, v44, vcc                  // 000000003648: 38305918
	v_add_co_u32_e32 v20, vcc, s22, v20                        // 00000000364C: 32282816
	v_addc_co_u32_e32 v21, vcc, v21, v44, vcc                  // 000000003650: 382A5915
	v_add_co_u32_e32 v18, vcc, s22, v18                        // 000000003654: 32242416
	v_addc_co_u32_e32 v19, vcc, v19, v44, vcc                  // 000000003658: 38265913
	v_cmp_lt_i32_e32 vcc, 1, v42                               // 00000000365C: 7D825481
	v_add_u32_e32 v43, -1, v42                                 // 000000003660: 685654C1
	s_and_b64 vcc, exec, vcc                                   // 000000003664: 86EA6A7E
	v_mov_b32_e32 v42, v43                                     // 000000003668: 7E54032B
	s_cbranch_vccz BB0_29                                      // 00000000366C: BF860199

0000000000003670 BB0_20:
	s_and_b64 vcc, exec, s[6:7]                                // 000000003670: 86EA067E
	s_cbranch_vccnz BB0_24                                     // 000000003674: BF870143
	v_mov_b32_e32 v43, 0                                       // 000000003678: 7E560280
	v_mov_b32_e32 v44, 0                                       // 00000000367C: 7E580280
	v_mov_b32_e32 v45, s5                                      // 000000003680: 7E5A0205

0000000000003684 BB0_22:
	v_add_co_u32_e64 v46, s[2:3], v31, v43                     // 000000003684: D119022E 0002571F
	v_addc_co_u32_e64 v47, s[2:3], v32, v44, s[2:3]            // 00000000368C: D11C022F 000A5920
	v_add_u32_e32 v48, s4, v0                                  // 000000003694: 68600004
	v_add_u32_e32 v49, s19, v0                                 // 000000003698: 68620013
	v_add_u32_e32 v45, -1, v45                                 // 00000000369C: 685A5AC1
	v_cmp_lt_i32_e32 vcc, 1, v45                               // 0000000036A0: 7D825A81
	s_and_b64 vcc, exec, vcc                                   // 0000000036A4: 86EA6A7E
	s_nop 0                                                    // 0000000036A8: BF800000
	s_nop 0                                                    // 0000000036AC: BF800000
	global_load_dword v50, v[46:47], off                       // 0000000036B0: DC508000 327F002E
	v_add_co_u32_e64 v46, s[2:3], v34, v43                     // 0000000036B8: D119022E 00025722
	v_addc_co_u32_e64 v47, s[2:3], v35, v44, s[2:3]            // 0000000036C0: D11C022F 000A5923
	s_nop 0                                                    // 0000000036C8: BF800000
	s_nop 0                                                    // 0000000036CC: BF800000
	global_load_dword v51, v[46:47], off                       // 0000000036D0: DC508000 337F002E
	v_add_co_u32_e64 v46, s[2:3], v36, v43                     // 0000000036D8: D119022E 00025724
	v_addc_co_u32_e64 v47, s[2:3], v37, v44, s[2:3]            // 0000000036E0: D11C022F 000A5925
	s_nop 0                                                    // 0000000036E8: BF800000
	s_nop 0                                                    // 0000000036EC: BF800000
	global_load_dword v52, v[46:47], off                       // 0000000036F0: DC508000 347F002E
	v_add_co_u32_e64 v46, s[2:3], v18, v43                     // 0000000036F8: D119022E 00025712
	v_addc_co_u32_e64 v47, s[2:3], v19, v44, s[2:3]            // 000000003700: D11C022F 000A5913
	s_nop 0                                                    // 000000003708: BF800000
	s_nop 0                                                    // 00000000370C: BF800000
	global_load_dword v53, v[46:47], off                       // 000000003710: DC508000 357F002E
	v_add_co_u32_e64 v46, s[2:3], v20, v43                     // 000000003718: D119022E 00025714
	v_addc_co_u32_e64 v47, s[2:3], v21, v44, s[2:3]            // 000000003720: D11C022F 000A5915
	s_nop 0                                                    // 000000003728: BF800000
	s_nop 0                                                    // 00000000372C: BF800000
	global_load_dword v54, v[46:47], off                       // 000000003730: DC508000 367F002E
	v_add_co_u32_e64 v46, s[2:3], v23, v43                     // 000000003738: D119022E 00025717
	v_addc_co_u32_e64 v47, s[2:3], v24, v44, s[2:3]            // 000000003740: D11C022F 000A5918
	s_nop 0                                                    // 000000003748: BF800000
	s_nop 0                                                    // 00000000374C: BF800000
	global_load_dword v55, v[46:47], off                       // 000000003750: DC508000 377F002E
	v_add_co_u32_e64 v46, s[2:3], v26, v43                     // 000000003758: D119022E 0002571A
	v_addc_co_u32_e64 v47, s[2:3], v27, v44, s[2:3]            // 000000003760: D11C022F 000A591B
	s_nop 0                                                    // 000000003768: BF800000
	s_nop 0                                                    // 00000000376C: BF800000
	global_load_dword v56, v[46:47], off                       // 000000003770: DC508000 387F002E
	v_add_co_u32_e64 v46, s[2:3], v28, v43                     // 000000003778: D119022E 0002571C
	v_addc_co_u32_e64 v47, s[2:3], v29, v44, s[2:3]            // 000000003780: D11C022F 000A591D
	v_add_co_u32_e64 v43, s[2:3], 32, v43                      // 000000003788: D119022B 000256A0
	v_addc_co_u32_e64 v44, s[2:3], 0, v44, s[2:3]              // 000000003790: D11C022C 000A5880
	s_nop 0                                                    // 000000003798: BF800000
	s_nop 0                                                    // 00000000379C: BF800000
	global_load_dword v46, v[46:47], off                       // 0000000037A0: DC508000 2E7F002E
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 0000000037A8: BF8C0070
	s_barrier                                                  // 0000000037AC: BF8A0000
	s_waitcnt lgkmcnt(0)                                       // 0000000037B0: BF8CC07F
	ds_write2_b32 v0, v52, v51 offset1:8                       // 0000000037B4: D81C0800 00333400
	ds_write2_b32 v0, v50, v46 offset0:16 offset1:24           // 0000000037BC: D81C1810 002E3200
	ds_write2_b32 v48, v56, v55 offset1:8                      // 0000000037C4: D81C0800 00373830
	ds_write2_b32 v49, v54, v53 offset1:8                      // 0000000037CC: D81C0800 00353631
	s_waitcnt lgkmcnt(0)                                       // 0000000037D4: BF8CC07F
	s_barrier                                                  // 0000000037D8: BF8A0000
	s_waitcnt lgkmcnt(0)                                       // 0000000037DC: BF8CC07F
	ds_read2_b32 v[46:47], v39 offset1:8                       // 0000000037E0: D86E0800 2E000027
	ds_read2_b32 v[48:49], v41 offset1:8                       // 0000000037E8: D86E0800 30000029
	ds_read2_b32 v[50:51], v39 offset0:16 offset1:24           // 0000000037F0: D86E1810 32000027
	s_waitcnt lgkmcnt(1)                                       // 0000000037F8: BF8CC17F
	v_mac_f32_e32 v38, v46, v48                                // 0000000037FC: 2C4C612E
	v_mac_f32_e32 v33, v47, v48                                // 000000003800: 2C42612F
	s_waitcnt lgkmcnt(0)                                       // 000000003804: BF8CC07F
	v_mac_f32_e32 v30, v50, v48                                // 000000003808: 2C3C6132
	v_mac_f32_e32 v25, v51, v48                                // 00000000380C: 2C326133
	v_mac_f32_e32 v22, v46, v49                                // 000000003810: 2C2C632E
	v_mac_f32_e32 v17, v47, v49                                // 000000003814: 2C22632F
	v_mac_f32_e32 v16, v50, v49                                // 000000003818: 2C206332
	v_mac_f32_e32 v15, v51, v49                                // 00000000381C: 2C1E6333
	ds_read2_b32 v[48:49], v41 offset0:16 offset1:24           // 000000003820: D86E1810 30000029
	s_waitcnt lgkmcnt(0)                                       // 000000003828: BF8CC07F
	v_mac_f32_e32 v12, v46, v48                                // 00000000382C: 2C18612E
	v_mac_f32_e32 v11, v47, v48                                // 000000003830: 2C16612F
	v_mac_f32_e32 v7, v46, v49                                 // 000000003834: 2C0E632E
	v_mac_f32_e32 v6, v47, v49                                 // 000000003838: 2C0C632F
	v_mac_f32_e32 v9, v50, v48                                 // 00000000383C: 2C126132
	v_mac_f32_e32 v8, v51, v48                                 // 000000003840: 2C106133
	v_mac_f32_e32 v2, v50, v49                                 // 000000003844: 2C046332
	v_mac_f32_e32 v3, v51, v49                                 // 000000003848: 2C066333
	ds_read2_b32 v[46:47], v39 offset0:32 offset1:40           // 00000000384C: D86E2820 2E000027
	ds_read2_b32 v[48:49], v41 offset0:32 offset1:40           // 000000003854: D86E2820 30000029
	ds_read2_b32 v[50:51], v39 offset0:48 offset1:56           // 00000000385C: D86E3830 32000027
	s_waitcnt lgkmcnt(1)                                       // 000000003864: BF8CC17F
	v_mac_f32_e32 v38, v46, v48                                // 000000003868: 2C4C612E
	v_mac_f32_e32 v33, v47, v48                                // 00000000386C: 2C42612F
	s_waitcnt lgkmcnt(0)                                       // 000000003870: BF8CC07F
	v_mac_f32_e32 v30, v50, v48                                // 000000003874: 2C3C6132
	v_mac_f32_e32 v25, v51, v48                                // 000000003878: 2C326133
	v_mac_f32_e32 v22, v46, v49                                // 00000000387C: 2C2C632E
	v_mac_f32_e32 v17, v47, v49                                // 000000003880: 2C22632F
	v_mac_f32_e32 v16, v50, v49                                // 000000003884: 2C206332
	v_mac_f32_e32 v15, v51, v49                                // 000000003888: 2C1E6333
	ds_read2_b32 v[48:49], v41 offset0:48 offset1:56           // 00000000388C: D86E3830 30000029
	s_waitcnt lgkmcnt(0)                                       // 000000003894: BF8CC07F
	v_mac_f32_e32 v12, v46, v48                                // 000000003898: 2C18612E
	v_mac_f32_e32 v11, v47, v48                                // 00000000389C: 2C16612F
	v_mac_f32_e32 v7, v46, v49                                 // 0000000038A0: 2C0E632E
	v_mac_f32_e32 v6, v47, v49                                 // 0000000038A4: 2C0C632F
	v_mac_f32_e32 v9, v50, v48                                 // 0000000038A8: 2C126132
	v_mac_f32_e32 v8, v51, v48                                 // 0000000038AC: 2C106133
	v_mac_f32_e32 v2, v50, v49                                 // 0000000038B0: 2C046332
	v_mac_f32_e32 v3, v51, v49                                 // 0000000038B4: 2C066333
	ds_read2_b32 v[46:47], v39 offset0:64 offset1:72           // 0000000038B8: D86E4840 2E000027
	ds_read2_b32 v[48:49], v41 offset0:64 offset1:72           // 0000000038C0: D86E4840 30000029
	ds_read2_b32 v[50:51], v39 offset0:80 offset1:88           // 0000000038C8: D86E5850 32000027
	s_waitcnt lgkmcnt(1)                                       // 0000000038D0: BF8CC17F
	v_mac_f32_e32 v38, v46, v48                                // 0000000038D4: 2C4C612E
	v_mac_f32_e32 v33, v47, v48                                // 0000000038D8: 2C42612F
	s_waitcnt lgkmcnt(0)                                       // 0000000038DC: BF8CC07F
	v_mac_f32_e32 v30, v50, v48                                // 0000000038E0: 2C3C6132
	v_mac_f32_e32 v25, v51, v48                                // 0000000038E4: 2C326133
	v_mac_f32_e32 v22, v46, v49                                // 0000000038E8: 2C2C632E
	v_mac_f32_e32 v17, v47, v49                                // 0000000038EC: 2C22632F
	v_mac_f32_e32 v16, v50, v49                                // 0000000038F0: 2C206332
	v_mac_f32_e32 v15, v51, v49                                // 0000000038F4: 2C1E6333
	ds_read2_b32 v[48:49], v41 offset0:80 offset1:88           // 0000000038F8: D86E5850 30000029
	s_waitcnt lgkmcnt(0)                                       // 000000003900: BF8CC07F
	v_mac_f32_e32 v12, v46, v48                                // 000000003904: 2C18612E
	v_mac_f32_e32 v11, v47, v48                                // 000000003908: 2C16612F
	v_mac_f32_e32 v7, v46, v49                                 // 00000000390C: 2C0E632E
	v_mac_f32_e32 v6, v47, v49                                 // 000000003910: 2C0C632F
	v_mac_f32_e32 v9, v50, v48                                 // 000000003914: 2C126132
	v_mac_f32_e32 v8, v51, v48                                 // 000000003918: 2C106133
	v_mac_f32_e32 v2, v50, v49                                 // 00000000391C: 2C046332
	v_mac_f32_e32 v3, v51, v49                                 // 000000003920: 2C066333
	ds_read2_b32 v[46:47], v39 offset0:96 offset1:104          // 000000003924: D86E6860 2E000027
	ds_read2_b32 v[48:49], v41 offset0:96 offset1:104          // 00000000392C: D86E6860 30000029
	ds_read2_b32 v[50:51], v39 offset0:112 offset1:120         // 000000003934: D86E7870 32000027
	s_waitcnt lgkmcnt(1)                                       // 00000000393C: BF8CC17F
	v_mac_f32_e32 v38, v46, v48                                // 000000003940: 2C4C612E
	v_mac_f32_e32 v33, v47, v48                                // 000000003944: 2C42612F
	s_waitcnt lgkmcnt(0)                                       // 000000003948: BF8CC07F
	v_mac_f32_e32 v30, v50, v48                                // 00000000394C: 2C3C6132
	v_mac_f32_e32 v25, v51, v48                                // 000000003950: 2C326133
	v_mac_f32_e32 v22, v46, v49                                // 000000003954: 2C2C632E
	v_mac_f32_e32 v17, v47, v49                                // 000000003958: 2C22632F
	v_mac_f32_e32 v16, v50, v49                                // 00000000395C: 2C206332
	v_mac_f32_e32 v15, v51, v49                                // 000000003960: 2C1E6333
	ds_read2_b32 v[48:49], v41 offset0:112 offset1:120         // 000000003964: D86E7870 30000029
	s_waitcnt lgkmcnt(0)                                       // 00000000396C: BF8CC07F
	v_mac_f32_e32 v12, v46, v48                                // 000000003970: 2C18612E
	v_mac_f32_e32 v11, v47, v48                                // 000000003974: 2C16612F
	v_mac_f32_e32 v7, v46, v49                                 // 000000003978: 2C0E632E
	v_mac_f32_e32 v6, v47, v49                                 // 00000000397C: 2C0C632F
	v_mac_f32_e32 v9, v50, v48                                 // 000000003980: 2C126132
	v_mac_f32_e32 v8, v51, v48                                 // 000000003984: 2C106133
	v_mac_f32_e32 v2, v50, v49                                 // 000000003988: 2C046332
	v_mac_f32_e32 v3, v51, v49                                 // 00000000398C: 2C066333
	ds_read2_b32 v[46:47], v39 offset0:128 offset1:136         // 000000003990: D86E8880 2E000027
	ds_read2_b32 v[48:49], v41 offset0:128 offset1:136         // 000000003998: D86E8880 30000029
	ds_read2_b32 v[50:51], v39 offset0:144 offset1:152         // 0000000039A0: D86E9890 32000027
	s_waitcnt lgkmcnt(1)                                       // 0000000039A8: BF8CC17F
	v_mac_f32_e32 v38, v46, v48                                // 0000000039AC: 2C4C612E
	v_mac_f32_e32 v33, v47, v48                                // 0000000039B0: 2C42612F
	s_waitcnt lgkmcnt(0)                                       // 0000000039B4: BF8CC07F
	v_mac_f32_e32 v30, v50, v48                                // 0000000039B8: 2C3C6132
	v_mac_f32_e32 v25, v51, v48                                // 0000000039BC: 2C326133
	v_mac_f32_e32 v22, v46, v49                                // 0000000039C0: 2C2C632E
	v_mac_f32_e32 v17, v47, v49                                // 0000000039C4: 2C22632F
	v_mac_f32_e32 v16, v50, v49                                // 0000000039C8: 2C206332
	v_mac_f32_e32 v15, v51, v49                                // 0000000039CC: 2C1E6333
	ds_read2_b32 v[48:49], v41 offset0:144 offset1:152         // 0000000039D0: D86E9890 30000029
	s_waitcnt lgkmcnt(0)                                       // 0000000039D8: BF8CC07F
	v_mac_f32_e32 v12, v46, v48                                // 0000000039DC: 2C18612E
	v_mac_f32_e32 v11, v47, v48                                // 0000000039E0: 2C16612F
	v_mac_f32_e32 v7, v46, v49                                 // 0000000039E4: 2C0E632E
	v_mac_f32_e32 v6, v47, v49                                 // 0000000039E8: 2C0C632F
	v_mac_f32_e32 v9, v50, v48                                 // 0000000039EC: 2C126132
	v_mac_f32_e32 v8, v51, v48                                 // 0000000039F0: 2C106133
	v_mac_f32_e32 v2, v50, v49                                 // 0000000039F4: 2C046332
	v_mac_f32_e32 v3, v51, v49                                 // 0000000039F8: 2C066333
	ds_read2_b32 v[46:47], v39 offset0:160 offset1:168         // 0000000039FC: D86EA8A0 2E000027
	ds_read2_b32 v[48:49], v41 offset0:160 offset1:168         // 000000003A04: D86EA8A0 30000029
	ds_read2_b32 v[50:51], v39 offset0:176 offset1:184         // 000000003A0C: D86EB8B0 32000027
	s_waitcnt lgkmcnt(1)                                       // 000000003A14: BF8CC17F
	v_mac_f32_e32 v38, v46, v48                                // 000000003A18: 2C4C612E
	v_mac_f32_e32 v33, v47, v48                                // 000000003A1C: 2C42612F
	s_waitcnt lgkmcnt(0)                                       // 000000003A20: BF8CC07F
	v_mac_f32_e32 v30, v50, v48                                // 000000003A24: 2C3C6132
	v_mac_f32_e32 v25, v51, v48                                // 000000003A28: 2C326133
	v_mac_f32_e32 v22, v46, v49                                // 000000003A2C: 2C2C632E
	v_mac_f32_e32 v17, v47, v49                                // 000000003A30: 2C22632F
	v_mac_f32_e32 v16, v50, v49                                // 000000003A34: 2C206332
	v_mac_f32_e32 v15, v51, v49                                // 000000003A38: 2C1E6333
	ds_read2_b32 v[48:49], v41 offset0:176 offset1:184         // 000000003A3C: D86EB8B0 30000029
	s_waitcnt lgkmcnt(0)                                       // 000000003A44: BF8CC07F
	v_mac_f32_e32 v12, v46, v48                                // 000000003A48: 2C18612E
	v_mac_f32_e32 v11, v47, v48                                // 000000003A4C: 2C16612F
	v_mac_f32_e32 v7, v46, v49                                 // 000000003A50: 2C0E632E
	v_mac_f32_e32 v6, v47, v49                                 // 000000003A54: 2C0C632F
	v_mac_f32_e32 v9, v50, v48                                 // 000000003A58: 2C126132
	v_mac_f32_e32 v8, v51, v48                                 // 000000003A5C: 2C106133
	v_mac_f32_e32 v2, v50, v49                                 // 000000003A60: 2C046332
	v_mac_f32_e32 v3, v51, v49                                 // 000000003A64: 2C066333
	ds_read2_b32 v[46:47], v39 offset0:192 offset1:200         // 000000003A68: D86EC8C0 2E000027
	ds_read2_b32 v[48:49], v41 offset0:192 offset1:200         // 000000003A70: D86EC8C0 30000029
	ds_read2_b32 v[50:51], v39 offset0:208 offset1:216         // 000000003A78: D86ED8D0 32000027
	s_waitcnt lgkmcnt(1)                                       // 000000003A80: BF8CC17F
	v_mac_f32_e32 v38, v46, v48                                // 000000003A84: 2C4C612E
	v_mac_f32_e32 v33, v47, v48                                // 000000003A88: 2C42612F
	s_waitcnt lgkmcnt(0)                                       // 000000003A8C: BF8CC07F
	v_mac_f32_e32 v30, v50, v48                                // 000000003A90: 2C3C6132
	v_mac_f32_e32 v25, v51, v48                                // 000000003A94: 2C326133
	v_mac_f32_e32 v22, v46, v49                                // 000000003A98: 2C2C632E
	v_mac_f32_e32 v17, v47, v49                                // 000000003A9C: 2C22632F
	v_mac_f32_e32 v16, v50, v49                                // 000000003AA0: 2C206332
	v_mac_f32_e32 v15, v51, v49                                // 000000003AA4: 2C1E6333
	ds_read2_b32 v[48:49], v41 offset0:208 offset1:216         // 000000003AA8: D86ED8D0 30000029
	s_waitcnt lgkmcnt(0)                                       // 000000003AB0: BF8CC07F
	v_mac_f32_e32 v12, v46, v48                                // 000000003AB4: 2C18612E
	v_mac_f32_e32 v11, v47, v48                                // 000000003AB8: 2C16612F
	v_mac_f32_e32 v7, v46, v49                                 // 000000003ABC: 2C0E632E
	v_mac_f32_e32 v6, v47, v49                                 // 000000003AC0: 2C0C632F
	v_mac_f32_e32 v9, v50, v48                                 // 000000003AC4: 2C126132
	v_mac_f32_e32 v8, v51, v48                                 // 000000003AC8: 2C106133
	v_mac_f32_e32 v2, v50, v49                                 // 000000003ACC: 2C046332
	v_mac_f32_e32 v3, v51, v49                                 // 000000003AD0: 2C066333
	ds_read2_b32 v[46:47], v39 offset0:224 offset1:232         // 000000003AD4: D86EE8E0 2E000027
	ds_read2_b32 v[48:49], v41 offset0:224 offset1:232         // 000000003ADC: D86EE8E0 30000029
	ds_read2_b32 v[50:51], v39 offset0:240 offset1:248         // 000000003AE4: D86EF8F0 32000027
	s_waitcnt lgkmcnt(1)                                       // 000000003AEC: BF8CC17F
	v_mac_f32_e32 v38, v46, v48                                // 000000003AF0: 2C4C612E
	v_mac_f32_e32 v33, v47, v48                                // 000000003AF4: 2C42612F
	s_waitcnt lgkmcnt(0)                                       // 000000003AF8: BF8CC07F
	v_mac_f32_e32 v30, v50, v48                                // 000000003AFC: 2C3C6132
	v_mac_f32_e32 v25, v51, v48                                // 000000003B00: 2C326133
	v_mac_f32_e32 v22, v46, v49                                // 000000003B04: 2C2C632E
	v_mac_f32_e32 v17, v47, v49                                // 000000003B08: 2C22632F
	v_mac_f32_e32 v16, v50, v49                                // 000000003B0C: 2C206332
	v_mac_f32_e32 v15, v51, v49                                // 000000003B10: 2C1E6333
	ds_read2_b32 v[48:49], v41 offset0:240 offset1:248         // 000000003B14: D86EF8F0 30000029
	s_waitcnt lgkmcnt(0)                                       // 000000003B1C: BF8CC07F
	v_mac_f32_e32 v12, v46, v48                                // 000000003B20: 2C18612E
	v_mac_f32_e32 v11, v47, v48                                // 000000003B24: 2C16612F
	v_mac_f32_e32 v7, v46, v49                                 // 000000003B28: 2C0E632E
	v_mac_f32_e32 v6, v47, v49                                 // 000000003B2C: 2C0C632F
	v_mac_f32_e32 v9, v50, v48                                 // 000000003B30: 2C126132
	v_mac_f32_e32 v8, v51, v48                                 // 000000003B34: 2C106133
	v_mac_f32_e32 v2, v50, v49                                 // 000000003B38: 2C046332
	v_mac_f32_e32 v3, v51, v49                                 // 000000003B3C: 2C066333
	s_cbranch_vccnz BB0_22                                     // 000000003B40: BF87FED0
	v_add_co_u32_e32 v18, vcc, v18, v43                        // 000000003B44: 32245712
	v_addc_co_u32_e32 v19, vcc, v19, v44, vcc                  // 000000003B48: 38265913
	v_add_co_u32_e32 v20, vcc, v20, v43                        // 000000003B4C: 32285714
	v_addc_co_u32_e32 v21, vcc, v21, v44, vcc                  // 000000003B50: 382A5915
	v_add_co_u32_e32 v23, vcc, v23, v43                        // 000000003B54: 322E5717
	v_addc_co_u32_e32 v24, vcc, v24, v44, vcc                  // 000000003B58: 38305918
	v_add_co_u32_e32 v26, vcc, v26, v43                        // 000000003B5C: 3234571A
	v_addc_co_u32_e32 v27, vcc, v27, v44, vcc                  // 000000003B60: 3836591B
	v_add_co_u32_e32 v28, vcc, v28, v43                        // 000000003B64: 3238571C
	v_addc_co_u32_e32 v29, vcc, v29, v44, vcc                  // 000000003B68: 383A591D
	v_add_co_u32_e32 v31, vcc, v31, v43                        // 000000003B6C: 323E571F
	v_addc_co_u32_e32 v32, vcc, v32, v44, vcc                  // 000000003B70: 38405920
	v_add_co_u32_e32 v34, vcc, v34, v43                        // 000000003B74: 32445722
	v_addc_co_u32_e32 v35, vcc, v35, v44, vcc                  // 000000003B78: 38465923
	v_add_co_u32_e32 v36, vcc, v36, v43                        // 000000003B7C: 32485724
	v_addc_co_u32_e32 v37, vcc, v37, v44, vcc                  // 000000003B80: 384A5925

0000000000003b84 BB0_24:
	v_mov_b32_e32 v43, 0                                       // 000000003B84: 7E560280
	v_mov_b32_e32 v44, v43                                     // 000000003B88: 7E58032B
	v_mov_b32_e32 v45, v43                                     // 000000003B8C: 7E5A032B
	v_mov_b32_e32 v47, v43                                     // 000000003B90: 7E5E032B
	v_mov_b32_e32 v49, v43                                     // 000000003B94: 7E62032B
	v_mov_b32_e32 v50, v43                                     // 000000003B98: 7E64032B
	v_mov_b32_e32 v48, v43                                     // 000000003B9C: 7E60032B
	v_mov_b32_e32 v46, v43                                     // 000000003BA0: 7E5C032B
	s_and_saveexec_b64 s[2:3], s[0:1]                          // 000000003BA4: BE822000
	s_cbranch_execz BB0_26                                     // 000000003BA8: BF880011

0000000000003bac BB0_25:
	global_load_dword v45, v[31:32], off                       // 000000003BAC: DC508000 2D7F001F
	global_load_dword v49, v[34:35], off                       // 000000003BB4: DC508000 317F0022
	global_load_dword v47, v[36:37], off                       // 000000003BBC: DC508000 2F7F0024
	global_load_dword v46, v[18:19], off                       // 000000003BC4: DC508000 2E7F0012
	s_nop 0                                                    // 000000003BCC: BF800000
	global_load_dword v43, v[20:21], off                       // 000000003BD0: DC508000 2B7F0014
	global_load_dword v48, v[23:24], off                       // 000000003BD8: DC508000 307F0017
	global_load_dword v44, v[26:27], off                       // 000000003BE0: DC508000 2C7F001A
	global_load_dword v50, v[28:29], off                       // 000000003BE8: DC508000 327F001C

0000000000003bf0 BB0_26:
	s_or_b64 exec, exec, s[2:3]                                // 000000003BF0: 87FE027E
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 000000003BF4: BF8C0070
	s_barrier                                                  // 000000003BF8: BF8A0000
	s_waitcnt lgkmcnt(0)                                       // 000000003BFC: BF8CC07F
	ds_write2_b32 v0, v47, v49 offset1:8                       // 000000003C00: D81C0800 00312F00
	ds_write2_b32 v0, v45, v50 offset0:16 offset1:24           // 000000003C08: D81C1810 00322D00
	v_add_u32_e32 v45, s4, v0                                  // 000000003C10: 685A0004
	ds_write2_b32 v45, v44, v48 offset1:8                      // 000000003C14: D81C0800 00302C2D
	v_add_u32_e32 v44, s19, v0                                 // 000000003C1C: 68580013
	s_and_b64 vcc, exec, s[8:9]                                // 000000003C20: 86EA087E
	ds_write2_b32 v44, v43, v46 offset1:8                      // 000000003C24: D81C0800 002E2B2C
	s_waitcnt lgkmcnt(0)                                       // 000000003C2C: BF8CC07F
	s_barrier                                                  // 000000003C30: BF8A0000
	s_waitcnt lgkmcnt(0)                                       // 000000003C34: BF8CC07F
	s_cbranch_vccnz BB0_19                                     // 000000003C38: BF87FE76
	v_mov_b32_e32 v43, s12                                     // 000000003C3C: 7E56020C
	v_mov_b32_e32 v44, v40                                     // 000000003C40: 7E580328
	v_mov_b32_e32 v45, v39                                     // 000000003C44: 7E5A0327

0000000000003c48 BB0_28:
	v_add_u32_e32 v46, s4, v44                                 // 000000003C48: 685C5804
	v_add_u32_e32 v52, s19, v44                                // 000000003C4C: 68685813
	ds_read2_b32 v[48:49], v45 offset1:8                       // 000000003C50: D86E0800 3000002D
	ds_read2_b32 v[50:51], v45 offset0:16 offset1:24           // 000000003C58: D86E1810 3200002D
	ds_read2_b32 v[46:47], v46 offset1:8                       // 000000003C60: D86E0800 2E00002E
	ds_read2_b32 v[52:53], v52 offset1:8                       // 000000003C68: D86E0800 34000034
	v_add_u32_e32 v43, -1, v43                                 // 000000003C70: 685656C1
	v_cmp_lt_i32_e32 vcc, 1, v43                               // 000000003C74: 7D825681
	v_add_u32_e32 v45, s13, v45                                // 000000003C78: 685A5A0D
	v_add_u32_e32 v44, s13, v44                                // 000000003C7C: 6858580D
	s_and_b64 vcc, exec, vcc                                   // 000000003C80: 86EA6A7E
	s_waitcnt lgkmcnt(1)                                       // 000000003C84: BF8CC17F
	v_mac_f32_e32 v38, v48, v46                                // 000000003C88: 2C4C5D30
	v_mac_f32_e32 v33, v49, v46                                // 000000003C8C: 2C425D31
	v_mac_f32_e32 v30, v50, v46                                // 000000003C90: 2C3C5D32
	v_mac_f32_e32 v25, v51, v46                                // 000000003C94: 2C325D33
	v_mac_f32_e32 v22, v48, v47                                // 000000003C98: 2C2C5F30
	v_mac_f32_e32 v17, v49, v47                                // 000000003C9C: 2C225F31
	v_mac_f32_e32 v16, v50, v47                                // 000000003CA0: 2C205F32
	v_mac_f32_e32 v15, v51, v47                                // 000000003CA4: 2C1E5F33
	s_waitcnt lgkmcnt(0)                                       // 000000003CA8: BF8CC07F
	v_mac_f32_e32 v12, v48, v52                                // 000000003CAC: 2C186930
	v_mac_f32_e32 v11, v49, v52                                // 000000003CB0: 2C166931
	v_mac_f32_e32 v7, v48, v53                                 // 000000003CB4: 2C0E6B30
	v_mac_f32_e32 v6, v49, v53                                 // 000000003CB8: 2C0C6B31
	v_mac_f32_e32 v9, v50, v52                                 // 000000003CBC: 2C126932
	v_mac_f32_e32 v8, v51, v52                                 // 000000003CC0: 2C106933
	v_mac_f32_e32 v2, v50, v53                                 // 000000003CC4: 2C046B32
	v_mac_f32_e32 v3, v51, v53                                 // 000000003CC8: 2C066B33
	s_cbranch_vccnz BB0_28                                     // 000000003CCC: BF87FFDE
	s_branch BB0_19                                            // 000000003CD0: BF82FE50

0000000000003cd4 BB0_29:
	v_or_b32_e32 v13, v14, v13                                 // 000000003CD4: 281A1B0E
	v_cmp_gt_u32_e64 s[4:5], s16, v13                          // 000000003CD8: D0CC0004 00021A10
	v_cmp_gt_u32_e64 s[6:7], s17, v10                          // 000000003CE0: D0CC0006 00021411
	s_and_b64 s[2:3], s[6:7], s[4:5]                           // 000000003CE8: 86820406
	s_and_saveexec_b64 s[0:1], s[2:3]                          // 000000003CEC: BE802002
	s_cbranch_execz BB0_31                                     // 000000003CF0: BF88000D

0000000000003cf4 BB0_30:
	v_mov_b32_e32 v14, 0                                       // 000000003CF4: 7E1C0280
	v_mad_u64_u32 v[18:19], s[2:3], v10, s11, v[13:14]         // 000000003CF8: D1E80212 0434170A
	v_mov_b32_e32 v14, s21                                     // 000000003D00: 7E1C0215
	v_mul_f32_e32 v0, s10, v38                                 // 000000003D04: 0A004C0A
	v_lshlrev_b64 v[18:19], 2, v[18:19]                        // 000000003D08: D28F0012 00022482
	v_add_co_u32_e32 v18, vcc, s20, v18                        // 000000003D10: 32242414
	v_addc_co_u32_e32 v19, vcc, v14, v19, vcc                  // 000000003D14: 3826270E
	s_nop 0                                                    // 000000003D18: BF800000
	s_nop 0                                                    // 000000003D1C: BF800000
	global_store_dword v[18:19], v0, off                       // 000000003D20: DC708000 007F0012

0000000000003d28 BB0_31:
	s_or_b64 exec, exec, s[0:1]                                // 000000003D28: 87FE007E
	v_or_b32_e32 v0, 8, v13                                    // 000000003D2C: 28001A88
	v_cmp_gt_u32_e64 s[2:3], s16, v0                           // 000000003D30: D0CC0002 00020010
	s_and_b64 s[8:9], s[6:7], s[2:3]                           // 000000003D38: 86880206
	s_and_saveexec_b64 s[0:1], s[8:9]                          // 000000003D3C: BE802008
	s_cbranch_execz BB0_33                                     // 000000003D40: BF88000E

0000000000003d44 BB0_32:
	v_mov_b32_e32 v19, 0                                       // 000000003D44: 7E260280
	v_mov_b32_e32 v18, v13                                     // 000000003D48: 7E24030D
	v_mad_u64_u32 v[18:19], s[8:9], v10, s11, v[18:19]         // 000000003D4C: D1E80812 0448170A
	v_mov_b32_e32 v14, s21                                     // 000000003D54: 7E1C0215
	v_mul_f32_e32 v0, s10, v33                                 // 000000003D58: 0A00420A
	v_lshlrev_b64 v[18:19], 2, v[18:19]                        // 000000003D5C: D28F0012 00022482
	v_add_co_u32_e32 v18, vcc, s20, v18                        // 000000003D64: 32242414
	v_addc_co_u32_e32 v19, vcc, v14, v19, vcc                  // 000000003D68: 3826270E
	s_nop 0                                                    // 000000003D6C: BF800000
	s_nop 0                                                    // 000000003D70: BF800000
	global_store_dword v[18:19], v0, off offset:32             // 000000003D74: DC708020 007F0012

0000000000003d7c BB0_33:
	s_or_b64 exec, exec, s[0:1]                                // 000000003D7C: 87FE007E
	v_or_b32_e32 v0, 16, v13                                   // 000000003D80: 28001A90
	v_cmp_gt_u32_e64 s[0:1], s16, v0                           // 000000003D84: D0CC0000 00020010
	s_and_b64 s[12:13], s[6:7], s[0:1]                         // 000000003D8C: 868C0006
	s_and_saveexec_b64 s[8:9], s[12:13]                        // 000000003D90: BE88200C
	s_cbranch_execz BB0_35                                     // 000000003D94: BF88000E

0000000000003d98 BB0_34:
	v_mov_b32_e32 v19, 0                                       // 000000003D98: 7E260280
	v_mov_b32_e32 v18, v13                                     // 000000003D9C: 7E24030D
	v_mad_u64_u32 v[18:19], s[12:13], v10, s11, v[18:19]       // 000000003DA0: D1E80C12 0448170A
	v_mov_b32_e32 v14, s21                                     // 000000003DA8: 7E1C0215
	v_mul_f32_e32 v0, s10, v30                                 // 000000003DAC: 0A003C0A
	v_lshlrev_b64 v[18:19], 2, v[18:19]                        // 000000003DB0: D28F0012 00022482
	v_add_co_u32_e32 v18, vcc, s20, v18                        // 000000003DB8: 32242414
	v_addc_co_u32_e32 v19, vcc, v14, v19, vcc                  // 000000003DBC: 3826270E
	s_nop 0                                                    // 000000003DC0: BF800000
	s_nop 0                                                    // 000000003DC4: BF800000
	global_store_dword v[18:19], v0, off offset:64             // 000000003DC8: DC708040 007F0012

0000000000003dd0 BB0_35:
	s_or_b64 exec, exec, s[8:9]                                // 000000003DD0: 87FE087E
	v_or_b32_e32 v0, 24, v13                                   // 000000003DD4: 28001A98
	v_cmp_gt_u32_e32 vcc, s16, v0                              // 000000003DD8: 7D980010
	s_and_b64 s[6:7], s[6:7], vcc                              // 000000003DDC: 86866A06
	s_and_saveexec_b64 s[8:9], s[6:7]                          // 000000003DE0: BE882006
	s_cbranch_execz BB0_37                                     // 000000003DE4: BF880010

0000000000003de8 BB0_36:
	v_mov_b32_e32 v19, 0                                       // 000000003DE8: 7E260280
	v_mov_b32_e32 v18, v13                                     // 000000003DEC: 7E24030D
	v_mad_u64_u32 v[18:19], s[6:7], v10, s11, v[18:19]         // 000000003DF0: D1E80612 0448170A
	v_mov_b32_e32 v10, s21                                     // 000000003DF8: 7E140215
	v_mul_f32_e32 v0, s10, v25                                 // 000000003DFC: 0A00320A
	v_lshlrev_b64 v[18:19], 2, v[18:19]                        // 000000003E00: D28F0012 00022482
	v_add_co_u32_e64 v18, s[6:7], s20, v18                     // 000000003E08: D1190612 00022414
	v_addc_co_u32_e64 v19, s[6:7], v10, v19, s[6:7]            // 000000003E10: D11C0613 001A270A
	s_nop 0                                                    // 000000003E18: BF800000
	s_nop 0                                                    // 000000003E1C: BF800000
	global_store_dword v[18:19], v0, off offset:96             // 000000003E20: DC708060 007F0012

0000000000003e28 BB0_37:
	s_or_b64 exec, exec, s[8:9]                                // 000000003E28: 87FE087E
	v_cmp_gt_u32_e64 s[6:7], s17, v5                           // 000000003E2C: D0CC0006 00020A11
	s_and_b64 s[8:9], s[4:5], s[6:7]                           // 000000003E34: 86880604
	s_and_saveexec_b64 s[12:13], s[8:9]                        // 000000003E38: BE8C2008
	s_cbranch_execz BB0_39                                     // 000000003E3C: BF880010

0000000000003e40 BB0_38:
	v_mov_b32_e32 v19, 0                                       // 000000003E40: 7E260280
	v_mov_b32_e32 v18, v13                                     // 000000003E44: 7E24030D
	v_mad_u64_u32 v[18:19], s[8:9], v5, s11, v[18:19]          // 000000003E48: D1E80812 04481705
	v_mov_b32_e32 v10, s21                                     // 000000003E50: 7E140215
	v_mul_f32_e32 v0, s10, v22                                 // 000000003E54: 0A002C0A
	v_lshlrev_b64 v[18:19], 2, v[18:19]                        // 000000003E58: D28F0012 00022482
	v_add_co_u32_e64 v18, s[8:9], s20, v18                     // 000000003E60: D1190812 00022414
	v_addc_co_u32_e64 v19, s[8:9], v10, v19, s[8:9]            // 000000003E68: D11C0813 0022270A
	s_nop 0                                                    // 000000003E70: BF800000
	s_nop 0                                                    // 000000003E74: BF800000
	global_store_dword v[18:19], v0, off                       // 000000003E78: DC708000 007F0012

0000000000003e80 BB0_39:
	s_or_b64 exec, exec, s[12:13]                              // 000000003E80: 87FE0C7E
	s_and_b64 s[8:9], s[6:7], s[2:3]                           // 000000003E84: 86880206
	s_and_saveexec_b64 s[12:13], s[8:9]                        // 000000003E88: BE8C2008
	s_cbranch_execz BB0_41                                     // 000000003E8C: BF880010

0000000000003e90 BB0_40:
	v_mov_b32_e32 v19, 0                                       // 000000003E90: 7E260280
	v_mov_b32_e32 v18, v13                                     // 000000003E94: 7E24030D
	v_mad_u64_u32 v[18:19], s[8:9], v5, s11, v[18:19]          // 000000003E98: D1E80812 04481705
	v_mul_f32_e32 v0, s10, v17                                 // 000000003EA0: 0A00220A
	v_mov_b32_e32 v10, s21                                     // 000000003EA4: 7E140215
	v_lshlrev_b64 v[17:18], 2, v[18:19]                        // 000000003EA8: D28F0011 00022482
	v_add_co_u32_e64 v17, s[8:9], s20, v17                     // 000000003EB0: D1190811 00022214
	v_addc_co_u32_e64 v18, s[8:9], v10, v18, s[8:9]            // 000000003EB8: D11C0812 0022250A
	s_nop 0                                                    // 000000003EC0: BF800000
	s_nop 0                                                    // 000000003EC4: BF800000
	global_store_dword v[17:18], v0, off offset:32             // 000000003EC8: DC708020 007F0011

0000000000003ed0 BB0_41:
	s_or_b64 exec, exec, s[12:13]                              // 000000003ED0: 87FE0C7E
	s_and_b64 s[8:9], s[6:7], s[0:1]                           // 000000003ED4: 86880006
	s_and_saveexec_b64 s[12:13], s[8:9]                        // 000000003ED8: BE8C2008
	s_cbranch_execz BB0_43                                     // 000000003EDC: BF880010

0000000000003ee0 BB0_42:
	v_mov_b32_e32 v18, 0                                       // 000000003EE0: 7E240280
	v_mov_b32_e32 v17, v13                                     // 000000003EE4: 7E22030D
	v_mad_u64_u32 v[17:18], s[8:9], v5, s11, v[17:18]          // 000000003EE8: D1E80811 04441705
	v_mul_f32_e32 v0, s10, v16                                 // 000000003EF0: 0A00200A
	v_mov_b32_e32 v10, s21                                     // 000000003EF4: 7E140215
	v_lshlrev_b64 v[16:17], 2, v[17:18]                        // 000000003EF8: D28F0010 00022282
	v_add_co_u32_e64 v16, s[8:9], s20, v16                     // 000000003F00: D1190810 00022014
	v_addc_co_u32_e64 v17, s[8:9], v10, v17, s[8:9]            // 000000003F08: D11C0811 0022230A
	s_nop 0                                                    // 000000003F10: BF800000
	s_nop 0                                                    // 000000003F14: BF800000
	global_store_dword v[16:17], v0, off offset:64             // 000000003F18: DC708040 007F0010

0000000000003f20 BB0_43:
	s_or_b64 exec, exec, s[12:13]                              // 000000003F20: 87FE0C7E
	s_and_b64 s[6:7], s[6:7], vcc                              // 000000003F24: 86866A06
	s_and_saveexec_b64 s[8:9], s[6:7]                          // 000000003F28: BE882006
	s_cbranch_execz BB0_45                                     // 000000003F2C: BF880010

0000000000003f30 BB0_44:
	v_mov_b32_e32 v17, 0                                       // 000000003F30: 7E220280
	v_mov_b32_e32 v16, v13                                     // 000000003F34: 7E20030D
	v_mad_u64_u32 v[16:17], s[6:7], v5, s11, v[16:17]          // 000000003F38: D1E80610 04401705
	v_mul_f32_e32 v0, s10, v15                                 // 000000003F40: 0A001E0A
	v_mov_b32_e32 v5, s21                                      // 000000003F44: 7E0A0215
	v_lshlrev_b64 v[14:15], 2, v[16:17]                        // 000000003F48: D28F000E 00022082
	v_add_co_u32_e64 v14, s[6:7], s20, v14                     // 000000003F50: D119060E 00021C14
	v_addc_co_u32_e64 v15, s[6:7], v5, v15, s[6:7]             // 000000003F58: D11C060F 001A1F05
	s_nop 0                                                    // 000000003F60: BF800000
	s_nop 0                                                    // 000000003F64: BF800000
	global_store_dword v[14:15], v0, off offset:96             // 000000003F68: DC708060 007F000E

0000000000003f70 BB0_45:
	s_or_b64 exec, exec, s[8:9]                                // 000000003F70: 87FE087E
	v_cmp_gt_u32_e64 s[6:7], s17, v4                           // 000000003F74: D0CC0006 00020811
	s_and_b64 s[8:9], s[4:5], s[6:7]                           // 000000003F7C: 86880604
	s_and_saveexec_b64 s[12:13], s[8:9]                        // 000000003F80: BE8C2008
	s_cbranch_execz BB0_47                                     // 000000003F84: BF880010

0000000000003f88 BB0_46:
	v_mov_b32_e32 v15, 0                                       // 000000003F88: 7E1E0280
	v_mov_b32_e32 v14, v13                                     // 000000003F8C: 7E1C030D
	v_mad_u64_u32 v[14:15], s[8:9], v4, s11, v[14:15]          // 000000003F90: D1E8080E 04381704
	v_mov_b32_e32 v5, s21                                      // 000000003F98: 7E0A0215
	v_mul_f32_e32 v0, s10, v12                                 // 000000003F9C: 0A00180A
	v_lshlrev_b64 v[14:15], 2, v[14:15]                        // 000000003FA0: D28F000E 00021C82
	v_add_co_u32_e64 v14, s[8:9], s20, v14                     // 000000003FA8: D119080E 00021C14
	v_addc_co_u32_e64 v15, s[8:9], v5, v15, s[8:9]             // 000000003FB0: D11C080F 00221F05
	s_nop 0                                                    // 000000003FB8: BF800000
	s_nop 0                                                    // 000000003FBC: BF800000
	global_store_dword v[14:15], v0, off                       // 000000003FC0: DC708000 007F000E

0000000000003fc8 BB0_47:
	s_or_b64 exec, exec, s[12:13]                              // 000000003FC8: 87FE0C7E
	s_and_b64 s[8:9], s[6:7], s[2:3]                           // 000000003FCC: 86880206
	s_and_saveexec_b64 s[12:13], s[8:9]                        // 000000003FD0: BE8C2008
	s_cbranch_execz BB0_49                                     // 000000003FD4: BF880010

0000000000003fd8 BB0_48:
	v_mov_b32_e32 v15, 0                                       // 000000003FD8: 7E1E0280
	v_mov_b32_e32 v14, v13                                     // 000000003FDC: 7E1C030D
	v_mad_u64_u32 v[14:15], s[8:9], v4, s11, v[14:15]          // 000000003FE0: D1E8080E 04381704
	v_mul_f32_e32 v0, s10, v11                                 // 000000003FE8: 0A00160A
	v_mov_b32_e32 v5, s21                                      // 000000003FEC: 7E0A0215
	v_lshlrev_b64 v[10:11], 2, v[14:15]                        // 000000003FF0: D28F000A 00021C82
	v_add_co_u32_e64 v10, s[8:9], s20, v10                     // 000000003FF8: D119080A 00021414
	v_addc_co_u32_e64 v11, s[8:9], v5, v11, s[8:9]             // 000000004000: D11C080B 00221705
	s_nop 0                                                    // 000000004008: BF800000
	s_nop 0                                                    // 00000000400C: BF800000
	global_store_dword v[10:11], v0, off offset:32             // 000000004010: DC708020 007F000A

0000000000004018 BB0_49:
	s_or_b64 exec, exec, s[12:13]                              // 000000004018: 87FE0C7E
	s_and_b64 s[8:9], s[6:7], s[0:1]                           // 00000000401C: 86880006
	s_and_saveexec_b64 s[12:13], s[8:9]                        // 000000004020: BE8C2008
	s_cbranch_execz BB0_51                                     // 000000004024: BF880010

0000000000004028 BB0_50:
	v_mov_b32_e32 v11, 0                                       // 000000004028: 7E160280
	v_mov_b32_e32 v10, v13                                     // 00000000402C: 7E14030D
	v_mad_u64_u32 v[10:11], s[8:9], v4, s11, v[10:11]          // 000000004030: D1E8080A 04281704
	v_mul_f32_e32 v0, s10, v9                                  // 000000004038: 0A00120A
	v_mov_b32_e32 v5, s21                                      // 00000000403C: 7E0A0215
	v_lshlrev_b64 v[9:10], 2, v[10:11]                         // 000000004040: D28F0009 00021482
	v_add_co_u32_e64 v9, s[8:9], s20, v9                       // 000000004048: D1190809 00021214
	v_addc_co_u32_e64 v10, s[8:9], v5, v10, s[8:9]             // 000000004050: D11C080A 00221505
	s_nop 0                                                    // 000000004058: BF800000
	s_nop 0                                                    // 00000000405C: BF800000
	global_store_dword v[9:10], v0, off offset:64              // 000000004060: DC708040 007F0009

0000000000004068 BB0_51:
	s_or_b64 exec, exec, s[12:13]                              // 000000004068: 87FE0C7E
	s_and_b64 s[6:7], s[6:7], vcc                              // 00000000406C: 86866A06
	s_and_saveexec_b64 s[8:9], s[6:7]                          // 000000004070: BE882006
	s_cbranch_execz BB0_53                                     // 000000004074: BF880010

0000000000004078 BB0_52:
	v_mov_b32_e32 v10, 0                                       // 000000004078: 7E140280
	v_mov_b32_e32 v9, v13                                      // 00000000407C: 7E12030D
	v_mad_u64_u32 v[4:5], s[6:7], v4, s11, v[9:10]             // 000000004080: D1E80604 04241704
	v_mul_f32_e32 v0, s10, v8                                  // 000000004088: 0A00100A
	v_mov_b32_e32 v8, s21                                      // 00000000408C: 7E100215
	v_lshlrev_b64 v[4:5], 2, v[4:5]                            // 000000004090: D28F0004 00020882
	v_add_co_u32_e64 v4, s[6:7], s20, v4                       // 000000004098: D1190604 00020814
	v_addc_co_u32_e64 v5, s[6:7], v8, v5, s[6:7]               // 0000000040A0: D11C0605 001A0B08
	s_nop 0                                                    // 0000000040A8: BF800000
	s_nop 0                                                    // 0000000040AC: BF800000
	global_store_dword v[4:5], v0, off offset:96               // 0000000040B0: DC708060 007F0004

00000000000040b8 BB0_53:
	s_or_b64 exec, exec, s[8:9]                                // 0000000040B8: 87FE087E
	v_cmp_gt_u32_e64 s[6:7], s17, v1                           // 0000000040BC: D0CC0006 00020211
	s_and_b64 s[4:5], s[4:5], s[6:7]                           // 0000000040C4: 86840604
	s_and_saveexec_b64 s[8:9], s[4:5]                          // 0000000040C8: BE882004
	s_cbranch_execz BB0_55                                     // 0000000040CC: BF880010

00000000000040d0 BB0_54:
	v_mov_b32_e32 v5, 0                                        // 0000000040D0: 7E0A0280
	v_mov_b32_e32 v4, v13                                      // 0000000040D4: 7E08030D
	v_mad_u64_u32 v[4:5], s[4:5], v1, s11, v[4:5]              // 0000000040D8: D1E80404 04101701
	v_mul_f32_e32 v0, s10, v7                                  // 0000000040E0: 0A000E0A
	v_mov_b32_e32 v7, s21                                      // 0000000040E4: 7E0E0215
	v_lshlrev_b64 v[4:5], 2, v[4:5]                            // 0000000040E8: D28F0004 00020882
	v_add_co_u32_e64 v4, s[4:5], s20, v4                       // 0000000040F0: D1190404 00020814
	v_addc_co_u32_e64 v5, s[4:5], v7, v5, s[4:5]               // 0000000040F8: D11C0405 00120B07
	s_nop 0                                                    // 000000004100: BF800000
	s_nop 0                                                    // 000000004104: BF800000
	global_store_dword v[4:5], v0, off                         // 000000004108: DC708000 007F0004

0000000000004110 BB0_55:
	s_or_b64 exec, exec, s[8:9]                                // 000000004110: 87FE087E
	s_and_b64 s[2:3], s[6:7], s[2:3]                           // 000000004114: 86820206
	s_and_saveexec_b64 s[4:5], s[2:3]                          // 000000004118: BE842002
	s_cbranch_execz BB0_57                                     // 00000000411C: BF880010

0000000000004120 BB0_56:
	v_mov_b32_e32 v5, 0                                        // 000000004120: 7E0A0280
	v_mov_b32_e32 v4, v13                                      // 000000004124: 7E08030D
	v_mad_u64_u32 v[4:5], s[2:3], v1, s11, v[4:5]              // 000000004128: D1E80204 04101701
	v_mul_f32_e32 v0, s10, v6                                  // 000000004130: 0A000C0A
	v_mov_b32_e32 v6, s21                                      // 000000004134: 7E0C0215
	v_lshlrev_b64 v[4:5], 2, v[4:5]                            // 000000004138: D28F0004 00020882
	v_add_co_u32_e64 v4, s[2:3], s20, v4                       // 000000004140: D1190204 00020814
	v_addc_co_u32_e64 v5, s[2:3], v6, v5, s[2:3]               // 000000004148: D11C0205 000A0B06
	s_nop 0                                                    // 000000004150: BF800000
	s_nop 0                                                    // 000000004154: BF800000
	global_store_dword v[4:5], v0, off offset:32               // 000000004158: DC708020 007F0004

0000000000004160 BB0_57:
	s_or_b64 exec, exec, s[4:5]                                // 000000004160: 87FE047E
	s_and_b64 s[0:1], s[6:7], s[0:1]                           // 000000004164: 86800006
	s_and_saveexec_b64 s[2:3], s[0:1]                          // 000000004168: BE822000
	s_cbranch_execz BB0_59                                     // 00000000416C: BF880010

0000000000004170 BB0_58:
	v_mov_b32_e32 v5, 0                                        // 000000004170: 7E0A0280
	v_mov_b32_e32 v4, v13                                      // 000000004174: 7E08030D
	v_mad_u64_u32 v[4:5], s[0:1], v1, s11, v[4:5]              // 000000004178: D1E80004 04101701
	v_mul_f32_e32 v0, s10, v2                                  // 000000004180: 0A00040A
	v_mov_b32_e32 v2, s21                                      // 000000004184: 7E040215
	v_lshlrev_b64 v[4:5], 2, v[4:5]                            // 000000004188: D28F0004 00020882
	v_add_co_u32_e64 v4, s[0:1], s20, v4                       // 000000004190: D1190004 00020814
	v_addc_co_u32_e64 v5, s[0:1], v2, v5, s[0:1]               // 000000004198: D11C0005 00020B02
	s_nop 0                                                    // 0000000041A0: BF800000
	s_nop 0                                                    // 0000000041A4: BF800000
	global_store_dword v[4:5], v0, off offset:64               // 0000000041A8: DC708040 007F0004

00000000000041b0 BB0_59:
	s_or_b64 exec, exec, s[2:3]                                // 0000000041B0: 87FE027E
	s_and_b64 s[0:1], s[6:7], vcc                              // 0000000041B4: 86806A06
	s_and_saveexec_b64 s[2:3], s[0:1]                          // 0000000041B8: BE822000
	s_cbranch_execz BB0_61                                     // 0000000041BC: BF88000D

00000000000041c0 BB0_60:
	v_mov_b32_e32 v14, 0                                       // 0000000041C0: 7E1C0280
	v_mad_u64_u32 v[0:1], s[0:1], v1, s11, v[13:14]            // 0000000041C4: D1E80000 04341701
	v_mul_f32_e32 v2, s10, v3                                  // 0000000041CC: 0A04060A
	v_mov_b32_e32 v3, s21                                      // 0000000041D0: 7E060215
	v_lshlrev_b64 v[0:1], 2, v[0:1]                            // 0000000041D4: D28F0000 00020082
	v_add_co_u32_e32 v0, vcc, s20, v0                          // 0000000041DC: 32000014
	v_addc_co_u32_e32 v1, vcc, v3, v1, vcc                     // 0000000041E0: 38020303
	s_nop 0                                                    // 0000000041E4: BF800000
	s_nop 0                                                    // 0000000041E8: BF800000
	global_store_dword v[0:1], v2, off offset:96               // 0000000041EC: DC708060 007F0200

00000000000041f4 BB0_61:
	s_endpgm                                                   // 0000000041F4: BF810000
	s_nop 0                                                    // 0000000041F8: BF800000
	s_nop 0                                                    // 0000000041FC: BF800000

0000000000004300 Cij_Alik_Bljk_S_MT32x32x8_SE_ASEM8_K1_PSD1:
	v_mov_b32_e32 v1, s4                                       // 000000004300: 7E020204
	v_mov_b32_e32 v2, s5                                       // 000000004304: 7E040205
	s_load_dword s0, s[4:5], 0x4                               // 000000004308: C0020002 00000004
	global_load_ushort v2, v[1:2], off offset:6                // 000000004310: DC488006 027F0001
	s_load_dwordx2 s[20:21], s[4:5], 0xc                       // 000000004318: C0060502 0000000C
	s_load_dwordx2 s[10:11], s[6:7], 0x20                      // 000000004320: C0060283 00000020
	s_mov_b32 s1, 0x4f800000                                   // 000000004328: BE8100FF 4F800000
	s_waitcnt lgkmcnt(0)                                       // 000000004330: BF8CC07F
	s_and_b32 s0, s0, 0xffff                                   // 000000004334: 8600FF00 0000FFFF
	v_cvt_f32_u32_e32 v1, s0                                   // 00000000433C: 7E020C00
	s_and_b32 s22, s9, 7                                       // 000000004340: 86168709
	s_load_dwordx8 s[12:19], s[6:7], 0x2c                      // 000000004344: C00E0303 0000002C
	s_load_dwordx2 s[4:5], s[6:7], 0x4c                        // 00000000434C: C0060103 0000004C
	v_rcp_iflag_f32_e32 v1, v1                                 // 000000004354: 7E024701
	v_mul_f32_e32 v1, s1, v1                                   // 000000004358: 0A020201
	v_cvt_u32_f32_e32 v1, v1                                   // 00000000435C: 7E020F01
	v_mul_lo_u32 v3, v1, s0                                    // 000000004360: D2850003 00000101
	v_mul_hi_u32 v4, v1, s0                                    // 000000004368: D2860004 00000101
	v_sub_u32_e32 v5, 0, v3                                    // 000000004370: 6A0A0680
	v_cmp_eq_u32_e32 vcc, 0, v4                                // 000000004374: 7D940880
	v_cndmask_b32_e32 v3, v3, v5, vcc                          // 000000004378: 00060B03
	v_mul_hi_u32 v3, v3, v1                                    // 00000000437C: D2860003 00020303
	v_add_u32_e32 v4, v1, v3                                   // 000000004384: 68080701
	v_sub_u32_e32 v1, v1, v3                                   // 000000004388: 6A020701
	v_cndmask_b32_e32 v1, v1, v4, vcc                          // 00000000438C: 00020901
	v_mul_hi_u32 v1, v1, s20                                   // 000000004390: D2860001 00002901
	v_mul_lo_u32 v4, v1, s0                                    // 000000004398: D2850004 00000101
	v_add_u32_e32 v6, -1, v1                                   // 0000000043A0: 680C02C1
	v_sub_u32_e32 v7, s20, v4                                  // 0000000043A4: 6A0E0814
	v_cmp_ge_u32_e32 vcc, s20, v4                              // 0000000043A8: 7D9C0814
	s_waitcnt vmcnt(0)                                         // 0000000043AC: BF8C0F70
	v_cvt_f32_u32_e32 v5, v2                                   // 0000000043B0: 7E0A0D02
	v_rcp_iflag_f32_e32 v3, v5                                 // 0000000043B4: 7E064705
	v_add_u32_e32 v5, 1, v1                                    // 0000000043B8: 680A0281
	v_mul_f32_e32 v3, s1, v3                                   // 0000000043BC: 0A060601
	v_cvt_u32_f32_e32 v3, v3                                   // 0000000043C0: 7E060F03
	v_cmp_le_u32_e64 s[0:1], s0, v7                            // 0000000043C4: D0CB0000 00020E00
	s_and_b64 s[0:1], s[0:1], vcc                              // 0000000043CC: 86806A00
	v_cndmask_b32_e64 v1, v1, v5, s[0:1]                       // 0000000043D0: D1000001 00020B01
	v_mul_lo_u32 v8, v3, v2                                    // 0000000043D8: D2850008 00020503
	v_mul_hi_u32 v9, v3, v2                                    // 0000000043E0: D2860009 00020503
	v_cndmask_b32_e32 v1, v6, v1, vcc                          // 0000000043E8: 00020306
	v_mul_lo_u32 v1, v1, s22                                   // 0000000043EC: D2850001 00002D01
	v_sub_u32_e32 v4, 0, v8                                    // 0000000043F4: 6A081080
	v_cmp_eq_u32_e64 s[2:3], 0, v9                             // 0000000043F8: D0CA0002 00021280
	v_cndmask_b32_e64 v4, v8, v4, s[2:3]                       // 000000004400: D1000004 000A0908
	v_mul_hi_u32 v4, v4, v3                                    // 000000004408: D2860004 00020704
	v_add_u32_e32 v1, s8, v1                                   // 000000004410: 68020208
	v_add_u32_e32 v5, v3, v4                                   // 000000004414: 680A0903
	v_sub_u32_e32 v3, v3, v4                                   // 000000004418: 6A060903
	v_cndmask_b32_e64 v3, v3, v5, s[2:3]                       // 00000000441C: D1000003 000A0B03
	v_mul_hi_u32 v3, v3, s21                                   // 000000004424: D2860003 00002B03
	v_mul_lo_u32 v4, v3, v2                                    // 00000000442C: D2850004 00020503
	v_add_u32_e32 v5, 1, v3                                    // 000000004434: 680A0681
	v_add_u32_e32 v6, -1, v3                                   // 000000004438: 680C06C1
	v_sub_u32_e32 v7, s21, v4                                  // 00000000443C: 6A0E0815
	v_cmp_ge_u32_e32 vcc, s21, v4                              // 000000004440: 7D9C0815
	v_cmp_ge_u32_e64 s[0:1], v7, v2                            // 000000004444: D0CE0000 00020507
	s_and_b64 s[0:1], s[0:1], vcc                              // 00000000444C: 86806A00
	v_cndmask_b32_e64 v2, v3, v5, s[0:1]                       // 000000004450: D1000002 00020B03
	v_cndmask_b32_e32 v3, v6, v2, vcc                          // 000000004458: 00060506
	v_and_b32_e32 v2, 7, v3                                    // 00000000445C: 26040687
	v_sub_u32_e32 v3, v3, v2                                   // 000000004460: 6A060503
	v_cmp_ge_u32_e32 vcc, s9, v3                               // 000000004464: 7D9C0609
	v_cmp_ne_u32_e64 s[0:1], 0, v2                             // 000000004468: D0CD0000 00020480
	s_and_b64 s[0:1], s[0:1], vcc                              // 000000004470: 86806A00
	s_and_b64 vcc, exec, s[0:1]                                // 000000004474: 86EA007E
	s_cbranch_vccnz BB1_2                                      // 000000004478: BF870004
	v_lshrrev_b32_e32 v3, 3, v1                                // 00000000447C: 20060283
	s_and_b32 s0, s9, -8                                       // 000000004480: 8600C809
	v_and_b32_e32 v1, 7, v1                                    // 000000004484: 26020287
	s_branch BB1_16                                            // 000000004488: BF820041

000000000000448c BB1_2:
	v_cmp_gt_i32_e32 vcc, 4, v2                                // 00000000448C: 7D880484
	s_and_b64 vcc, exec, vcc                                   // 000000004490: 86EA6A7E
	s_cbranch_vccz BB1_5                                       // 000000004494: BF860006
	v_cmp_gt_i32_e32 vcc, 2, v2                                // 000000004498: 7D880482
	s_and_b64 vcc, exec, vcc                                   // 00000000449C: 86EA6A7E
	s_cbranch_vccz BB1_7                                       // 0000000044A0: BF86000A
	s_and_b32 s0, s9, -8                                       // 0000000044A4: 8600C809
	v_mov_b32_e32 v2, s0                                       // 0000000044A8: 7E040200
	s_branch BB1_17                                            // 0000000044AC: BF82003A

00000000000044b0 BB1_5:
	v_cmp_gt_i32_e32 vcc, 5, v2                                // 0000000044B0: 7D880485
	s_and_b64 vcc, exec, vcc                                   // 0000000044B4: 86EA6A7E
	s_cbranch_vccz BB1_9                                       // 0000000044B8: BF86000B
	v_lshrrev_b32_e32 v3, 2, v1                                // 0000000044BC: 20060282
	v_and_b32_e32 v1, 3, v1                                    // 0000000044C0: 26020283
	s_and_b32 s0, s9, -8                                       // 0000000044C4: 8600C809
	s_branch BB1_16                                            // 0000000044C8: BF820031

00000000000044cc BB1_7:
	v_cmp_gt_i32_e32 vcc, 3, v2                                // 0000000044CC: 7D880483
	s_and_b64 vcc, exec, vcc                                   // 0000000044D0: 86EA6A7E
	s_cbranch_vccz BB1_11                                      // 0000000044D4: BF86000F
	v_lshrrev_b32_e32 v3, 1, v1                                // 0000000044D8: 20060281
	v_and_b32_e32 v1, 1, v1                                    // 0000000044DC: 26020281
	s_and_b32 s0, s9, -8                                       // 0000000044E0: 8600C809
	s_branch BB1_16                                            // 0000000044E4: BF82002A

00000000000044e8 BB1_9:
	v_cmp_gt_i32_e32 vcc, 6, v2                                // 0000000044E8: 7D880486
	s_and_b64 vcc, exec, vcc                                   // 0000000044EC: 86EA6A7E
	s_cbranch_vccz BB1_12                                      // 0000000044F0: BF860010
	s_mov_b32 s0, 0xcccccccd                                   // 0000000044F4: BE8000FF CCCCCCCD
	v_mul_hi_u32 v2, v1, s0                                    // 0000000044FC: D2860002 00000101
	v_lshrrev_b32_e32 v3, 2, v2                                // 000000004504: 20060482
	v_mul_lo_u32 v2, v3, -5                                    // 000000004508: D2850002 00018B03
	s_branch BB1_15                                            // 000000004510: BF82001D

0000000000004514 BB1_11:
	s_mov_b32 s0, 0xaaaaaaab                                   // 000000004514: BE8000FF AAAAAAAB
	v_mul_hi_u32 v2, v1, s0                                    // 00000000451C: D2860002 00000101
	v_lshrrev_b32_e32 v3, 1, v2                                // 000000004524: 20060481
	v_mul_lo_u32 v2, v3, -3                                    // 000000004528: D2850002 00018703
	s_branch BB1_15                                            // 000000004530: BF820015

0000000000004534 BB1_12:
	v_cmp_eq_u32_e32 vcc, 6, v2                                // 000000004534: 7D940486
	s_and_b64 vcc, exec, vcc                                   // 000000004538: 86EA6A7E
	s_cbranch_vccz BB1_14                                      // 00000000453C: BF860008
	s_mov_b32 s0, 0xaaaaaaab                                   // 000000004540: BE8000FF AAAAAAAB
	v_mul_hi_u32 v2, v1, s0                                    // 000000004548: D2860002 00000101
	v_lshrrev_b32_e32 v3, 2, v2                                // 000000004550: 20060482
	v_mul_lo_u32 v2, v3, -6                                    // 000000004554: D2850002 00018D03
	s_branch BB1_15                                            // 00000000455C: BF82000A

0000000000004560 BB1_14:
	s_mov_b32 s0, 0x24924925                                   // 000000004560: BE8000FF 24924925
	v_mul_hi_u32 v2, v1, s0                                    // 000000004568: D2860002 00000101
	v_sub_u32_e32 v3, v1, v2                                   // 000000004570: 6A060501
	v_lshrrev_b32_e32 v3, 1, v3                                // 000000004574: 20060681
	v_add_u32_e32 v2, v3, v2                                   // 000000004578: 68040503
	v_lshrrev_b32_e32 v3, 2, v2                                // 00000000457C: 20060482
	v_mul_lo_u32 v2, v3, -7                                    // 000000004580: D2850002 00018F03

0000000000004588 BB1_15:
	s_and_b32 s0, s9, -8                                       // 000000004588: 8600C809
	v_add_u32_e32 v1, v2, v1                                   // 00000000458C: 68020302

0000000000004590 BB1_16:
	v_or_b32_e32 v2, s0, v1                                    // 000000004590: 28040200
	v_mov_b32_e32 v1, v3                                       // 000000004594: 7E020303

0000000000004598 BB1_17:
	s_load_dwordx2 s[20:21], s[6:7], 0x0                       // 000000004598: C0060503 00000000
	v_lshrrev_b32_e32 v39, 3, v0                               // 0000000045A0: 204E0083
	v_mov_b32_e32 v34, 0                                       // 0000000045A4: 7E440280
	v_lshl_add_u32 v7, v2, 5, v39                              // 0000000045A8: D1FD0007 049D0B02
	s_waitcnt lgkmcnt(0)                                       // 0000000045B0: BF8CC07F
	s_mul_i32 s1, s19, s18                                     // 0000000045B4: 92011213
	v_lshlrev_b32_e32 v11, 5, v1                               // 0000000045B8: 24160285
	v_and_b32_e32 v10, 7, v0                                   // 0000000045BC: 26140087
	s_mov_b32 s0, 8                                            // 0000000045C0: BE800088
	v_add_u32_e32 v5, 8, v7                                    // 0000000045C4: 680A0E88
	v_add_u32_e32 v4, 16, v7                                   // 0000000045C8: 68080E90
	v_add_u32_e32 v1, 24, v7                                   // 0000000045CC: 68020E98
	s_cmp_eq_u32 s1, 0                                         // 0000000045D0: BF068001
	v_mov_b32_e32 v29, v34                                     // 0000000045D4: 7E3A0322
	v_mov_b32_e32 v24, v34                                     // 0000000045D8: 7E300322
	v_mov_b32_e32 v19, v34                                     // 0000000045DC: 7E260322
	v_mov_b32_e32 v18, v34                                     // 0000000045E0: 7E240322
	v_mov_b32_e32 v17, v34                                     // 0000000045E4: 7E220322
	v_mov_b32_e32 v16, v34                                     // 0000000045E8: 7E200322
	v_mov_b32_e32 v15, v34                                     // 0000000045EC: 7E1E0322
	v_mov_b32_e32 v14, v34                                     // 0000000045F0: 7E1C0322
	v_mov_b32_e32 v13, v34                                     // 0000000045F4: 7E1A0322
	v_mov_b32_e32 v12, v34                                     // 0000000045F8: 7E180322
	v_mov_b32_e32 v9, v34                                      // 0000000045FC: 7E120322
	v_mov_b32_e32 v8, v34                                      // 000000004600: 7E100322
	v_mov_b32_e32 v6, v34                                      // 000000004604: 7E0C0322
	v_mov_b32_e32 v2, v34                                      // 000000004608: 7E040322
	v_mov_b32_e32 v3, v34                                      // 00000000460C: 7E060322
	s_cbranch_scc1 BB1_20                                      // 000000004610: BF8501A9
	v_add_u32_e32 v2, v11, v39                                 // 000000004614: 68044F0B
	s_load_dwordx2 s[2:3], s[6:7], 0x10                        // 000000004618: C0060083 00000010
	s_load_dwordx2 s[8:9], s[6:7], 0x18                        // 000000004620: C0060203 00000018
	s_add_i32 s6, s16, -1                                      // 000000004628: 8106C110
	v_min_u32_e32 v3, s6, v2                                   // 00000000462C: 1C060406
	v_add_u32_e32 v6, 8, v2                                    // 000000004630: 680C0488
	v_min_u32_e32 v6, s6, v6                                   // 000000004634: 1C0C0C06
	v_mul_lo_u32 v3, v3, s12                                   // 000000004638: D2850003 00001903
	v_mul_lo_u32 v6, v6, s12                                   // 000000004640: D2850006 00001906
	v_add_u32_e32 v8, 16, v2                                   // 000000004648: 68100490
	v_add_u32_e32 v2, 24, v2                                   // 00000000464C: 68040498
	v_min_u32_e32 v8, s6, v8                                   // 000000004650: 1C101006
	v_min_u32_e32 v14, s6, v2                                  // 000000004654: 1C1C0406
	v_add_u32_e32 v2, v3, v10                                  // 000000004658: 68041503
	v_mov_b32_e32 v3, 0                                        // 00000000465C: 7E060280
	v_mul_lo_u32 v12, v8, s12                                  // 000000004660: D285000C 00001908
	v_add_u32_e32 v8, v6, v10                                  // 000000004668: 68101506
	v_mul_lo_u32 v6, v14, s12                                  // 00000000466C: D2850006 0000190E
	v_lshlrev_b64 v[14:15], 2, v[2:3]                          // 000000004674: D28F000E 00020482
	v_mov_b32_e32 v9, v3                                       // 00000000467C: 7E120303
	s_waitcnt lgkmcnt(0)                                       // 000000004680: BF8CC07F
	v_mov_b32_e32 v2, s3                                       // 000000004684: 7E040203
	v_add_co_u32_e32 v20, vcc, s2, v14                         // 000000004688: 32281C02
	v_lshlrev_b64 v[8:9], 2, v[8:9]                            // 00000000468C: D28F0008 00021082
	v_addc_co_u32_e32 v21, vcc, v2, v15, vcc                   // 000000004694: 382A1F02
	v_add_co_u32_e32 v22, vcc, s2, v8                          // 000000004698: 322C1002
	v_add_u32_e32 v12, v12, v10                                // 00000000469C: 6818150C
	v_mov_b32_e32 v13, v3                                      // 0000000046A0: 7E1A0303
	v_addc_co_u32_e32 v23, vcc, v2, v9, vcc                    // 0000000046A4: 382E1302
	v_lshlrev_b64 v[8:9], 2, v[12:13]                          // 0000000046A8: D28F0008 00021882
	s_add_i32 s3, s17, -1                                      // 0000000046B0: 8103C111
	v_add_co_u32_e32 v25, vcc, s2, v8                          // 0000000046B4: 32321002
	v_add_u32_e32 v8, v6, v10                                  // 0000000046B8: 68101506
	v_min_u32_e32 v6, s3, v7                                   // 0000000046BC: 1C0C0E03
	v_mul_lo_u32 v6, v6, s14                                   // 0000000046C0: D2850006 00001D06
	v_addc_co_u32_e32 v26, vcc, v2, v9, vcc                    // 0000000046C8: 38341302
	v_mov_b32_e32 v9, v3                                       // 0000000046CC: 7E120303
	v_lshlrev_b64 v[8:9], 2, v[8:9]                            // 0000000046D0: D28F0008 00021082
	v_lshrrev_b32_e32 v0, 1, v0                                // 0000000046D8: 20000081
	v_add_co_u32_e32 v27, vcc, s2, v8                          // 0000000046DC: 32361002
	v_add_u32_e32 v8, v6, v10                                  // 0000000046E0: 68101506
	v_min_u32_e32 v6, s3, v5                                   // 0000000046E4: 1C0C0A03
	v_mul_lo_u32 v6, v6, s14                                   // 0000000046E8: D2850006 00001D06
	v_addc_co_u32_e32 v28, vcc, v2, v9, vcc                    // 0000000046F0: 38381302
	v_mov_b32_e32 v9, v3                                       // 0000000046F4: 7E120303
	v_lshlrev_b64 v[8:9], 2, v[8:9]                            // 0000000046F8: D28F0008 00021082
	v_mov_b32_e32 v2, s9                                       // 000000004700: 7E040209
	v_add_co_u32_e32 v30, vcc, s8, v8                          // 000000004704: 323C1008
	v_add_u32_e32 v8, v6, v10                                  // 000000004708: 68101506
	v_min_u32_e32 v6, s3, v4                                   // 00000000470C: 1C0C0803
	v_mul_lo_u32 v6, v6, s14                                   // 000000004710: D2850006 00001D06
	v_addc_co_u32_e32 v31, vcc, v2, v9, vcc                    // 000000004718: 383E1302
	v_mov_b32_e32 v9, v3                                       // 00000000471C: 7E120303
	v_lshlrev_b64 v[8:9], 2, v[8:9]                            // 000000004720: D28F0008 00021082
	v_mov_b32_e32 v42, v21                                     // 000000004728: 7E540315
	v_add_co_u32_e32 v32, vcc, s8, v8                          // 00000000472C: 32401008
	v_add_u32_e32 v8, v6, v10                                  // 000000004730: 68101506
	v_min_u32_e32 v6, s3, v1                                   // 000000004734: 1C0C0203
	v_addc_co_u32_e32 v33, vcc, v2, v9, vcc                    // 000000004738: 38421302
	v_mov_b32_e32 v9, v3                                       // 00000000473C: 7E120303
	v_mul_lo_u32 v6, v6, s14                                   // 000000004740: D2850006 00001D06
	v_lshlrev_b64 v[8:9], 2, v[8:9]                            // 000000004748: D28F0008 00021082
	v_mov_b32_e32 v44, v23                                     // 000000004750: 7E580317
	v_add_co_u32_e32 v35, vcc, s8, v8                          // 000000004754: 32461008
	v_addc_co_u32_e32 v36, vcc, v2, v9, vcc                    // 000000004758: 38481302
	v_add_u32_e32 v8, v6, v10                                  // 00000000475C: 68101506
	v_mov_b32_e32 v9, v3                                       // 000000004760: 7E120303
	v_lshlrev_b64 v[8:9], 2, v[8:9]                            // 000000004764: D28F0008 00021082
	v_mov_b32_e32 v6, 0x400                                    // 00000000476C: 7E0C02FF 00000400
	v_add_co_u32_e32 v37, vcc, s8, v8                          // 000000004774: 324A1008
	v_addc_co_u32_e32 v38, vcc, v2, v9, vcc                    // 000000004778: 384C1302
	v_and_b32_e32 v2, 0x1e0, v0                                // 00000000477C: 260400FF 000001E0
	v_and_or_b32 v0, v39, 7, v2                                // 000000004784: D2010000 04090F27
	v_lshl_add_u32 v0, v0, 2, v6                               // 00000000478C: D1FD0000 04190500
	v_lshlrev_b32_e32 v6, 5, v10                               // 000000004794: 240C1485
	v_or_b32_e32 v2, v2, v10                                   // 000000004798: 28041502
	v_mov_b32_e32 v46, v26                                     // 00000000479C: 7E5C031A
	v_mov_b32_e32 v48, v28                                     // 0000000047A0: 7E60031C
	v_mov_b32_e32 v52, v31                                     // 0000000047A4: 7E68031F
	v_mov_b32_e32 v54, v33                                     // 0000000047A8: 7E6C0321
	v_mov_b32_e32 v56, v36                                     // 0000000047AC: 7E700324
	v_mov_b32_e32 v50, v38                                     // 0000000047B0: 7E640326
	v_add_lshl_u32 v39, v6, v39, 2                             // 0000000047B4: D1FE0027 020A4F06
	v_lshlrev_b32_e32 v40, 2, v2                               // 0000000047BC: 24500482
	s_and_b32 s2, s5, 0x7fffffff                               // 0000000047C0: 8602FF05 7FFFFFFF
	s_ashr_i32 s3, s5, 31                                      // 0000000047C8: 90039F05
	s_mov_b32 s6, s13                                          // 0000000047CC: BE86000D
	s_mov_b32 s8, s15                                          // 0000000047D0: BE88000F
	s_sub_i32 s5, 0, s19                                       // 0000000047D4: 81851380
	v_mov_b32_e32 v2, v3                                       // 0000000047D8: 7E040303
	v_mov_b32_e32 v6, v3                                       // 0000000047DC: 7E0C0303
	v_mov_b32_e32 v8, v3                                       // 0000000047E0: 7E100303
	v_mov_b32_e32 v9, v3                                       // 0000000047E4: 7E120303
	v_mov_b32_e32 v12, v3                                      // 0000000047E8: 7E180303
	v_mov_b32_e32 v14, v3                                      // 0000000047EC: 7E1C0303
	v_mov_b32_e32 v15, v3                                      // 0000000047F0: 7E1E0303
	v_mov_b32_e32 v16, v3                                      // 0000000047F4: 7E200303
	v_mov_b32_e32 v17, v3                                      // 0000000047F8: 7E220303
	v_mov_b32_e32 v18, v3                                      // 0000000047FC: 7E240303
	v_mov_b32_e32 v19, v3                                      // 000000004800: 7E260303
	v_mov_b32_e32 v24, v3                                      // 000000004804: 7E300303
	v_mov_b32_e32 v29, v3                                      // 000000004808: 7E3A0303
	v_mov_b32_e32 v34, v3                                      // 00000000480C: 7E440303
	v_mov_b32_e32 v41, v20                                     // 000000004810: 7E520314
	v_mov_b32_e32 v43, v22                                     // 000000004814: 7E560316
	v_mov_b32_e32 v45, v25                                     // 000000004818: 7E5A0319
	v_mov_b32_e32 v47, v27                                     // 00000000481C: 7E5E031B
	v_mov_b32_e32 v51, v30                                     // 000000004820: 7E66031E
	v_mov_b32_e32 v53, v32                                     // 000000004824: 7E6A0320
	v_mov_b32_e32 v55, v35                                     // 000000004828: 7E6E0323
	v_mov_b32_e32 v49, v37                                     // 00000000482C: 7E620325

0000000000004830 BB1_19:
	global_load_dword v57, v[41:42], off                       // 000000004830: DC508000 397F0029
	global_load_dword v58, v[43:44], off                       // 000000004838: DC508000 3A7F002B
	global_load_dword v59, v[45:46], off                       // 000000004840: DC508000 3B7F002D
	global_load_dword v60, v[47:48], off                       // 000000004848: DC508000 3C7F002F
	global_load_dword v61, v[51:52], off                       // 000000004850: DC508000 3D7F0033
	global_load_dword v62, v[53:54], off                       // 000000004858: DC508000 3E7F0035
	global_load_dword v63, v[55:56], off                       // 000000004860: DC508000 3F7F0037
	global_load_dword v43, v[49:50], off                       // 000000004868: DC508000 2B7F0031
	v_mov_b32_e32 v41, s4                                      // 000000004870: 7E520204
	v_mul_hi_u32 v41, s0, v41                                  // 000000004874: D2860029 00025200
	s_and_b32 s7, s0, s3                                       // 00000000487C: 86070300
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 000000004880: BF8C0070
	s_barrier                                                  // 000000004884: BF8A0000
	v_add_co_u32_e32 v41, vcc, s7, v41                         // 000000004888: 32525207
	v_addc_co_u32_e64 v42, s[12:13], 0, 0, vcc                 // 00000000488C: D11C0C2A 01A90080
	v_lshrrev_b64 v[41:42], s2, v[41:42]                       // 000000004894: D2900029 00025202
	v_add_u32_e32 v42, 0x400, v39                              // 00000000489C: 68544EFF 00000400
	s_waitcnt lgkmcnt(0)                                       // 0000000048A4: BF8CC07F
	s_add_i32 s7, s0, 8                                        // 0000000048A8: 81078800
	s_cmp_lt_u32 s0, s1                                        // 0000000048AC: BF0A0100
	ds_write2_b32 v39, v57, v58 offset1:8                      // 0000000048B0: D81C0800 003A3927
	ds_write2_b32 v39, v59, v60 offset0:16 offset1:24          // 0000000048B8: D81C1810 003C3B27
	ds_write2_b32 v42, v61, v62 offset1:8                      // 0000000048C0: D81C0800 003E3D2A
	v_add_u32_e32 v42, 0x440, v39                              // 0000000048C8: 68544EFF 00000440
	ds_write2_b32 v42, v63, v43 offset1:8                      // 0000000048D0: D81C0800 002B3F2A
	s_waitcnt lgkmcnt(0)                                       // 0000000048D8: BF8CC07F
	s_barrier                                                  // 0000000048DC: BF8A0000
	s_waitcnt lgkmcnt(0)                                       // 0000000048E0: BF8CC07F
	ds_read2_b32 v[44:45], v40 offset1:8                       // 0000000048E4: D86E0800 2C000028
	ds_read2_b32 v[46:47], v40 offset0:16 offset1:24           // 0000000048EC: D86E1810 2E000028
	ds_read2_b32 v[48:49], v0 offset1:8                        // 0000000048F4: D86E0800 30000000
	v_mul_lo_u32 v42, s5, v41                                  // 0000000048FC: D285002A 00025205
	v_mov_b32_e32 v43, 0                                       // 000000004904: 7E560280
	s_waitcnt lgkmcnt(0)                                       // 000000004908: BF8CC07F
	v_mac_f32_e32 v34, v44, v48                                // 00000000490C: 2C44612C
	v_mac_f32_e32 v29, v45, v48                                // 000000004910: 2C3A612D
	v_mac_f32_e32 v24, v46, v48                                // 000000004914: 2C30612E
	v_mac_f32_e32 v19, v47, v48                                // 000000004918: 2C26612F
	v_mac_f32_e32 v18, v44, v49                                // 00000000491C: 2C24632C
	v_mac_f32_e32 v17, v45, v49                                // 000000004920: 2C22632D
	v_mac_f32_e32 v16, v46, v49                                // 000000004924: 2C20632E
	v_mac_f32_e32 v15, v47, v49                                // 000000004928: 2C1E632F
	ds_read2_b32 v[48:49], v0 offset0:16 offset1:24            // 00000000492C: D86E1810 30000000
	v_add_u32_e32 v42, s0, v42                                 // 000000004934: 68545400
	s_mov_b32 s0, s7                                           // 000000004938: BE800007
	s_waitcnt lgkmcnt(0)                                       // 00000000493C: BF8CC07F
	v_mac_f32_e32 v14, v44, v48                                // 000000004940: 2C1C612C
	v_mac_f32_e32 v13, v45, v48                                // 000000004944: 2C1A612D
	v_mac_f32_e32 v8, v44, v49                                 // 000000004948: 2C10632C
	v_mac_f32_e32 v6, v45, v49                                 // 00000000494C: 2C0C632D
	v_mac_f32_e32 v12, v46, v48                                // 000000004950: 2C18612E
	v_mac_f32_e32 v9, v47, v48                                 // 000000004954: 2C12612F
	v_mac_f32_e32 v2, v46, v49                                 // 000000004958: 2C04632E
	v_mac_f32_e32 v3, v47, v49                                 // 00000000495C: 2C06632F
	ds_read2_b32 v[44:45], v40 offset0:32 offset1:40           // 000000004960: D86E2820 2C000028
	ds_read2_b32 v[46:47], v0 offset0:32 offset1:40            // 000000004968: D86E2820 2E000000
	ds_read2_b32 v[48:49], v40 offset0:48 offset1:56           // 000000004970: D86E3830 30000028
	s_waitcnt lgkmcnt(1)                                       // 000000004978: BF8CC17F
	v_mac_f32_e32 v34, v44, v46                                // 00000000497C: 2C445D2C
	v_mac_f32_e32 v29, v45, v46                                // 000000004980: 2C3A5D2D
	s_waitcnt lgkmcnt(0)                                       // 000000004984: BF8CC07F
	v_mac_f32_e32 v24, v48, v46                                // 000000004988: 2C305D30
	v_mac_f32_e32 v19, v49, v46                                // 00000000498C: 2C265D31
	v_mac_f32_e32 v18, v44, v47                                // 000000004990: 2C245F2C
	v_mac_f32_e32 v17, v45, v47                                // 000000004994: 2C225F2D
	v_mac_f32_e32 v16, v48, v47                                // 000000004998: 2C205F30
	v_mac_f32_e32 v15, v49, v47                                // 00000000499C: 2C1E5F31
	ds_read2_b32 v[46:47], v0 offset0:48 offset1:56            // 0000000049A0: D86E3830 2E000000
	s_waitcnt lgkmcnt(0)                                       // 0000000049A8: BF8CC07F
	v_mac_f32_e32 v14, v44, v46                                // 0000000049AC: 2C1C5D2C
	v_mac_f32_e32 v13, v45, v46                                // 0000000049B0: 2C1A5D2D
	v_mac_f32_e32 v8, v44, v47                                 // 0000000049B4: 2C105F2C
	v_mac_f32_e32 v6, v45, v47                                 // 0000000049B8: 2C0C5F2D
	v_mac_f32_e32 v12, v48, v46                                // 0000000049BC: 2C185D30
	v_mac_f32_e32 v9, v49, v46                                 // 0000000049C0: 2C125D31
	v_mac_f32_e32 v2, v48, v47                                 // 0000000049C4: 2C045F30
	v_mac_f32_e32 v3, v49, v47                                 // 0000000049C8: 2C065F31
	ds_read2_b32 v[44:45], v40 offset0:64 offset1:72           // 0000000049CC: D86E4840 2C000028
	ds_read2_b32 v[46:47], v0 offset0:64 offset1:72            // 0000000049D4: D86E4840 2E000000
	ds_read2_b32 v[48:49], v40 offset0:80 offset1:88           // 0000000049DC: D86E5850 30000028
	s_waitcnt lgkmcnt(1)                                       // 0000000049E4: BF8CC17F
	v_mac_f32_e32 v34, v44, v46                                // 0000000049E8: 2C445D2C
	v_mac_f32_e32 v29, v45, v46                                // 0000000049EC: 2C3A5D2D
	s_waitcnt lgkmcnt(0)                                       // 0000000049F0: BF8CC07F
	v_mac_f32_e32 v24, v48, v46                                // 0000000049F4: 2C305D30
	v_mac_f32_e32 v19, v49, v46                                // 0000000049F8: 2C265D31
	v_mac_f32_e32 v18, v44, v47                                // 0000000049FC: 2C245F2C
	v_mac_f32_e32 v17, v45, v47                                // 000000004A00: 2C225F2D
	v_mac_f32_e32 v16, v48, v47                                // 000000004A04: 2C205F30
	v_mac_f32_e32 v15, v49, v47                                // 000000004A08: 2C1E5F31
	ds_read2_b32 v[46:47], v0 offset0:80 offset1:88            // 000000004A0C: D86E5850 2E000000
	s_waitcnt lgkmcnt(0)                                       // 000000004A14: BF8CC07F
	v_mac_f32_e32 v14, v44, v46                                // 000000004A18: 2C1C5D2C
	v_mac_f32_e32 v13, v45, v46                                // 000000004A1C: 2C1A5D2D
	v_mac_f32_e32 v8, v44, v47                                 // 000000004A20: 2C105F2C
	v_mac_f32_e32 v6, v45, v47                                 // 000000004A24: 2C0C5F2D
	v_mac_f32_e32 v12, v48, v46                                // 000000004A28: 2C185D30
	v_mac_f32_e32 v9, v49, v46                                 // 000000004A2C: 2C125D31
	v_mac_f32_e32 v2, v48, v47                                 // 000000004A30: 2C045F30
	v_mac_f32_e32 v3, v49, v47                                 // 000000004A34: 2C065F31
	ds_read2_b32 v[44:45], v40 offset0:96 offset1:104          // 000000004A38: D86E6860 2C000028
	ds_read2_b32 v[46:47], v0 offset0:96 offset1:104           // 000000004A40: D86E6860 2E000000
	ds_read2_b32 v[48:49], v40 offset0:112 offset1:120         // 000000004A48: D86E7870 30000028
	s_waitcnt lgkmcnt(1)                                       // 000000004A50: BF8CC17F
	v_mac_f32_e32 v34, v44, v46                                // 000000004A54: 2C445D2C
	v_mac_f32_e32 v29, v45, v46                                // 000000004A58: 2C3A5D2D
	s_waitcnt lgkmcnt(0)                                       // 000000004A5C: BF8CC07F
	v_mac_f32_e32 v24, v48, v46                                // 000000004A60: 2C305D30
	v_mac_f32_e32 v19, v49, v46                                // 000000004A64: 2C265D31
	v_mac_f32_e32 v18, v44, v47                                // 000000004A68: 2C245F2C
	v_mac_f32_e32 v17, v45, v47                                // 000000004A6C: 2C225F2D
	v_mac_f32_e32 v16, v48, v47                                // 000000004A70: 2C205F30
	v_mac_f32_e32 v15, v49, v47                                // 000000004A74: 2C1E5F31
	ds_read2_b32 v[46:47], v0 offset0:112 offset1:120          // 000000004A78: D86E7870 2E000000
	s_waitcnt lgkmcnt(0)                                       // 000000004A80: BF8CC07F
	v_mac_f32_e32 v14, v44, v46                                // 000000004A84: 2C1C5D2C
	v_mac_f32_e32 v13, v45, v46                                // 000000004A88: 2C1A5D2D
	v_mac_f32_e32 v8, v44, v47                                 // 000000004A8C: 2C105F2C
	v_mac_f32_e32 v6, v45, v47                                 // 000000004A90: 2C0C5F2D
	v_mac_f32_e32 v12, v48, v46                                // 000000004A94: 2C185D30
	v_mac_f32_e32 v9, v49, v46                                 // 000000004A98: 2C125D31
	v_mac_f32_e32 v2, v48, v47                                 // 000000004A9C: 2C045F30
	v_mac_f32_e32 v3, v49, v47                                 // 000000004AA0: 2C065F31
	ds_read2_b32 v[44:45], v40 offset0:128 offset1:136         // 000000004AA4: D86E8880 2C000028
	ds_read2_b32 v[46:47], v0 offset0:128 offset1:136          // 000000004AAC: D86E8880 2E000000
	ds_read2_b32 v[48:49], v40 offset0:144 offset1:152         // 000000004AB4: D86E9890 30000028
	s_waitcnt lgkmcnt(1)                                       // 000000004ABC: BF8CC17F
	v_mac_f32_e32 v34, v44, v46                                // 000000004AC0: 2C445D2C
	v_mac_f32_e32 v29, v45, v46                                // 000000004AC4: 2C3A5D2D
	s_waitcnt lgkmcnt(0)                                       // 000000004AC8: BF8CC07F
	v_mac_f32_e32 v24, v48, v46                                // 000000004ACC: 2C305D30
	v_mac_f32_e32 v19, v49, v46                                // 000000004AD0: 2C265D31
	v_mac_f32_e32 v18, v44, v47                                // 000000004AD4: 2C245F2C
	v_mac_f32_e32 v17, v45, v47                                // 000000004AD8: 2C225F2D
	v_mac_f32_e32 v16, v48, v47                                // 000000004ADC: 2C205F30
	v_mac_f32_e32 v15, v49, v47                                // 000000004AE0: 2C1E5F31
	ds_read2_b32 v[46:47], v0 offset0:144 offset1:152          // 000000004AE4: D86E9890 2E000000
	s_waitcnt lgkmcnt(0)                                       // 000000004AEC: BF8CC07F
	v_mac_f32_e32 v14, v44, v46                                // 000000004AF0: 2C1C5D2C
	v_mac_f32_e32 v13, v45, v46                                // 000000004AF4: 2C1A5D2D
	v_mac_f32_e32 v8, v44, v47                                 // 000000004AF8: 2C105F2C
	v_mac_f32_e32 v6, v45, v47                                 // 000000004AFC: 2C0C5F2D
	v_mac_f32_e32 v12, v48, v46                                // 000000004B00: 2C185D30
	v_mac_f32_e32 v9, v49, v46                                 // 000000004B04: 2C125D31
	v_mac_f32_e32 v2, v48, v47                                 // 000000004B08: 2C045F30
	v_mac_f32_e32 v3, v49, v47                                 // 000000004B0C: 2C065F31
	ds_read2_b32 v[44:45], v40 offset0:160 offset1:168         // 000000004B10: D86EA8A0 2C000028
	ds_read2_b32 v[46:47], v0 offset0:160 offset1:168          // 000000004B18: D86EA8A0 2E000000
	ds_read2_b32 v[48:49], v40 offset0:176 offset1:184         // 000000004B20: D86EB8B0 30000028
	s_waitcnt lgkmcnt(1)                                       // 000000004B28: BF8CC17F
	v_mac_f32_e32 v34, v44, v46                                // 000000004B2C: 2C445D2C
	v_mac_f32_e32 v29, v45, v46                                // 000000004B30: 2C3A5D2D
	s_waitcnt lgkmcnt(0)                                       // 000000004B34: BF8CC07F
	v_mac_f32_e32 v24, v48, v46                                // 000000004B38: 2C305D30
	v_mac_f32_e32 v19, v49, v46                                // 000000004B3C: 2C265D31
	v_mac_f32_e32 v18, v44, v47                                // 000000004B40: 2C245F2C
	v_mac_f32_e32 v17, v45, v47                                // 000000004B44: 2C225F2D
	v_mac_f32_e32 v16, v48, v47                                // 000000004B48: 2C205F30
	v_mac_f32_e32 v15, v49, v47                                // 000000004B4C: 2C1E5F31
	ds_read2_b32 v[46:47], v0 offset0:176 offset1:184          // 000000004B50: D86EB8B0 2E000000
	s_waitcnt lgkmcnt(0)                                       // 000000004B58: BF8CC07F
	v_mac_f32_e32 v14, v44, v46                                // 000000004B5C: 2C1C5D2C
	v_mac_f32_e32 v13, v45, v46                                // 000000004B60: 2C1A5D2D
	v_mac_f32_e32 v8, v44, v47                                 // 000000004B64: 2C105F2C
	v_mac_f32_e32 v6, v45, v47                                 // 000000004B68: 2C0C5F2D
	v_mac_f32_e32 v12, v48, v46                                // 000000004B6C: 2C185D30
	v_mac_f32_e32 v9, v49, v46                                 // 000000004B70: 2C125D31
	v_mac_f32_e32 v2, v48, v47                                 // 000000004B74: 2C045F30
	v_mac_f32_e32 v3, v49, v47                                 // 000000004B78: 2C065F31
	ds_read2_b32 v[44:45], v40 offset0:192 offset1:200         // 000000004B7C: D86EC8C0 2C000028
	ds_read2_b32 v[46:47], v0 offset0:192 offset1:200          // 000000004B84: D86EC8C0 2E000000
	ds_read2_b32 v[48:49], v40 offset0:208 offset1:216         // 000000004B8C: D86ED8D0 30000028
	s_waitcnt lgkmcnt(1)                                       // 000000004B94: BF8CC17F
	v_mac_f32_e32 v34, v44, v46                                // 000000004B98: 2C445D2C
	v_mac_f32_e32 v29, v45, v46                                // 000000004B9C: 2C3A5D2D
	s_waitcnt lgkmcnt(0)                                       // 000000004BA0: BF8CC07F
	v_mac_f32_e32 v24, v48, v46                                // 000000004BA4: 2C305D30
	v_mac_f32_e32 v19, v49, v46                                // 000000004BA8: 2C265D31
	v_mac_f32_e32 v18, v44, v47                                // 000000004BAC: 2C245F2C
	v_mac_f32_e32 v17, v45, v47                                // 000000004BB0: 2C225F2D
	v_mac_f32_e32 v16, v48, v47                                // 000000004BB4: 2C205F30
	v_mac_f32_e32 v15, v49, v47                                // 000000004BB8: 2C1E5F31
	ds_read2_b32 v[46:47], v0 offset0:208 offset1:216          // 000000004BBC: D86ED8D0 2E000000
	s_waitcnt lgkmcnt(0)                                       // 000000004BC4: BF8CC07F
	v_mac_f32_e32 v14, v44, v46                                // 000000004BC8: 2C1C5D2C
	v_mac_f32_e32 v13, v45, v46                                // 000000004BCC: 2C1A5D2D
	v_mac_f32_e32 v8, v44, v47                                 // 000000004BD0: 2C105F2C
	v_mac_f32_e32 v6, v45, v47                                 // 000000004BD4: 2C0C5F2D
	v_mac_f32_e32 v12, v48, v46                                // 000000004BD8: 2C185D30
	v_mac_f32_e32 v9, v49, v46                                 // 000000004BDC: 2C125D31
	v_mac_f32_e32 v2, v48, v47                                 // 000000004BE0: 2C045F30
	v_mac_f32_e32 v3, v49, v47                                 // 000000004BE4: 2C065F31
	ds_read2_b32 v[44:45], v40 offset0:224 offset1:232         // 000000004BE8: D86EE8E0 2C000028
	ds_read2_b32 v[46:47], v0 offset0:224 offset1:232          // 000000004BF0: D86EE8E0 2E000000
	ds_read2_b32 v[48:49], v40 offset0:240 offset1:248         // 000000004BF8: D86EF8F0 30000028
	s_waitcnt lgkmcnt(1)                                       // 000000004C00: BF8CC17F
	v_mac_f32_e32 v34, v44, v46                                // 000000004C04: 2C445D2C
	v_mac_f32_e32 v29, v45, v46                                // 000000004C08: 2C3A5D2D
	s_waitcnt lgkmcnt(0)                                       // 000000004C0C: BF8CC07F
	v_mac_f32_e32 v24, v48, v46                                // 000000004C10: 2C305D30
	v_mac_f32_e32 v19, v49, v46                                // 000000004C14: 2C265D31
	v_mac_f32_e32 v18, v44, v47                                // 000000004C18: 2C245F2C
	v_mac_f32_e32 v17, v45, v47                                // 000000004C1C: 2C225F2D
	v_mac_f32_e32 v16, v48, v47                                // 000000004C20: 2C205F30
	v_mac_f32_e32 v15, v49, v47                                // 000000004C24: 2C1E5F31
	ds_read2_b32 v[46:47], v0 offset0:240 offset1:248          // 000000004C28: D86EF8F0 2E000000
	s_waitcnt lgkmcnt(0)                                       // 000000004C30: BF8CC07F
	v_mac_f32_e32 v14, v44, v46                                // 000000004C34: 2C1C5D2C
	v_mac_f32_e32 v13, v45, v46                                // 000000004C38: 2C1A5D2D
	v_mac_f32_e32 v8, v44, v47                                 // 000000004C3C: 2C105F2C
	v_mac_f32_e32 v6, v45, v47                                 // 000000004C40: 2C0C5F2D
	v_mad_u64_u32 v[44:45], s[12:13], v41, s6, v[42:43]        // 000000004C44: D1E80C2C 04A80D29
	v_mac_f32_e32 v12, v48, v46                                // 000000004C4C: 2C185D30
	v_mac_f32_e32 v2, v48, v47                                 // 000000004C50: 2C045F30
	v_mac_f32_e32 v3, v49, v47                                 // 000000004C54: 2C065F31
	v_lshlrev_b64 v[47:48], 2, v[44:45]                        // 000000004C58: D28F002F 00025882
	v_mac_f32_e32 v9, v49, v46                                 // 000000004C60: 2C125D31
	v_mad_u64_u32 v[49:50], s[12:13], v41, s8, v[42:43]        // 000000004C64: D1E80C31 04A81129
	v_add_co_u32_e32 v41, vcc, v20, v47                        // 000000004C6C: 32525F14
	v_addc_co_u32_e32 v42, vcc, v21, v48, vcc                  // 000000004C70: 38546115
	v_add_co_u32_e32 v43, vcc, v22, v47                        // 000000004C74: 32565F16
	v_addc_co_u32_e32 v44, vcc, v23, v48, vcc                  // 000000004C78: 38586117
	v_add_co_u32_e32 v45, vcc, v25, v47                        // 000000004C7C: 325A5F19
	v_addc_co_u32_e32 v46, vcc, v26, v48, vcc                  // 000000004C80: 385C611A
	v_add_co_u32_e32 v47, vcc, v27, v47                        // 000000004C84: 325E5F1B
	v_lshlrev_b64 v[49:50], 2, v[49:50]                        // 000000004C88: D28F0031 00026282
	v_addc_co_u32_e32 v48, vcc, v28, v48, vcc                  // 000000004C90: 3860611C
	v_add_co_u32_e32 v51, vcc, v30, v49                        // 000000004C94: 3266631E
	v_addc_co_u32_e32 v52, vcc, v31, v50, vcc                  // 000000004C98: 3868651F
	v_add_co_u32_e32 v53, vcc, v32, v49                        // 000000004C9C: 326A6320
	v_addc_co_u32_e32 v54, vcc, v33, v50, vcc                  // 000000004CA0: 386C6521
	v_add_co_u32_e32 v55, vcc, v35, v49                        // 000000004CA4: 326E6323
	v_addc_co_u32_e32 v56, vcc, v36, v50, vcc                  // 000000004CA8: 38706524
	v_add_co_u32_e32 v49, vcc, v37, v49                        // 000000004CAC: 32626325
	v_addc_co_u32_e32 v50, vcc, v38, v50, vcc                  // 000000004CB0: 38646526
	s_cbranch_scc1 BB1_19                                      // 000000004CB4: BF85FEDE

0000000000004cb8 BB1_20:
	v_or_b32_e32 v10, v11, v10                                 // 000000004CB8: 2814150B
	v_cmp_gt_u32_e64 s[4:5], s16, v10                          // 000000004CBC: D0CC0004 00021410
	v_cmp_gt_u32_e64 s[6:7], s17, v7                           // 000000004CC4: D0CC0006 00020E11
	s_and_b64 s[2:3], s[6:7], s[4:5]                           // 000000004CCC: 86820406
	s_and_saveexec_b64 s[0:1], s[2:3]                          // 000000004CD0: BE802002
	s_cbranch_execz BB1_22                                     // 000000004CD4: BF88000D

0000000000004cd8 BB1_21:
	v_mov_b32_e32 v11, 0                                       // 000000004CD8: 7E160280
	v_mad_u64_u32 v[20:21], s[2:3], v7, s11, v[10:11]          // 000000004CDC: D1E80214 04281707
	v_mov_b32_e32 v11, s21                                     // 000000004CE4: 7E160215
	v_mul_f32_e32 v0, s10, v34                                 // 000000004CE8: 0A00440A
	v_lshlrev_b64 v[20:21], 2, v[20:21]                        // 000000004CEC: D28F0014 00022882
	v_add_co_u32_e32 v20, vcc, s20, v20                        // 000000004CF4: 32282814
	v_addc_co_u32_e32 v21, vcc, v11, v21, vcc                  // 000000004CF8: 382A2B0B
	s_nop 0                                                    // 000000004CFC: BF800000
	s_nop 0                                                    // 000000004D00: BF800000
	global_store_dword v[20:21], v0, off                       // 000000004D04: DC708000 007F0014

0000000000004d0c BB1_22:
	s_or_b64 exec, exec, s[0:1]                                // 000000004D0C: 87FE007E
	v_or_b32_e32 v0, 8, v10                                    // 000000004D10: 28001488
	v_cmp_gt_u32_e64 s[2:3], s16, v0                           // 000000004D14: D0CC0002 00020010
	s_and_b64 s[8:9], s[6:7], s[2:3]                           // 000000004D1C: 86880206
	s_and_saveexec_b64 s[0:1], s[8:9]                          // 000000004D20: BE802008
	s_cbranch_execz BB1_24                                     // 000000004D24: BF88000E

0000000000004d28 BB1_23:
	v_mov_b32_e32 v21, 0                                       // 000000004D28: 7E2A0280
	v_mov_b32_e32 v20, v10                                     // 000000004D2C: 7E28030A
	v_mad_u64_u32 v[20:21], s[8:9], v7, s11, v[20:21]          // 000000004D30: D1E80814 04501707
	v_mov_b32_e32 v11, s21                                     // 000000004D38: 7E160215
	v_mul_f32_e32 v0, s10, v29                                 // 000000004D3C: 0A003A0A
	v_lshlrev_b64 v[20:21], 2, v[20:21]                        // 000000004D40: D28F0014 00022882
	v_add_co_u32_e32 v20, vcc, s20, v20                        // 000000004D48: 32282814
	v_addc_co_u32_e32 v21, vcc, v11, v21, vcc                  // 000000004D4C: 382A2B0B
	s_nop 0                                                    // 000000004D50: BF800000
	s_nop 0                                                    // 000000004D54: BF800000
	global_store_dword v[20:21], v0, off offset:32             // 000000004D58: DC708020 007F0014

0000000000004d60 BB1_24:
	s_or_b64 exec, exec, s[0:1]                                // 000000004D60: 87FE007E
	v_or_b32_e32 v0, 16, v10                                   // 000000004D64: 28001490
	v_cmp_gt_u32_e64 s[0:1], s16, v0                           // 000000004D68: D0CC0000 00020010
	s_and_b64 s[12:13], s[6:7], s[0:1]                         // 000000004D70: 868C0006
	s_and_saveexec_b64 s[8:9], s[12:13]                        // 000000004D74: BE88200C
	s_cbranch_execz BB1_26                                     // 000000004D78: BF88000E

0000000000004d7c BB1_25:
	v_mov_b32_e32 v21, 0                                       // 000000004D7C: 7E2A0280
	v_mov_b32_e32 v20, v10                                     // 000000004D80: 7E28030A
	v_mad_u64_u32 v[20:21], s[12:13], v7, s11, v[20:21]        // 000000004D84: D1E80C14 04501707
	v_mov_b32_e32 v11, s21                                     // 000000004D8C: 7E160215
	v_mul_f32_e32 v0, s10, v24                                 // 000000004D90: 0A00300A
	v_lshlrev_b64 v[20:21], 2, v[20:21]                        // 000000004D94: D28F0014 00022882
	v_add_co_u32_e32 v20, vcc, s20, v20                        // 000000004D9C: 32282814
	v_addc_co_u32_e32 v21, vcc, v11, v21, vcc                  // 000000004DA0: 382A2B0B
	s_nop 0                                                    // 000000004DA4: BF800000
	s_nop 0                                                    // 000000004DA8: BF800000
	global_store_dword v[20:21], v0, off offset:64             // 000000004DAC: DC708040 007F0014

0000000000004db4 BB1_26:
	s_or_b64 exec, exec, s[8:9]                                // 000000004DB4: 87FE087E
	v_or_b32_e32 v0, 24, v10                                   // 000000004DB8: 28001498
	v_cmp_gt_u32_e32 vcc, s16, v0                              // 000000004DBC: 7D980010
	s_and_b64 s[6:7], s[6:7], vcc                              // 000000004DC0: 86866A06
	s_and_saveexec_b64 s[8:9], s[6:7]                          // 000000004DC4: BE882006
	s_cbranch_execz BB1_28                                     // 000000004DC8: BF880010

0000000000004dcc BB1_27:
	v_mov_b32_e32 v21, 0                                       // 000000004DCC: 7E2A0280
	v_mov_b32_e32 v20, v10                                     // 000000004DD0: 7E28030A
	v_mad_u64_u32 v[20:21], s[6:7], v7, s11, v[20:21]          // 000000004DD4: D1E80614 04501707
	v_mul_f32_e32 v0, s10, v19                                 // 000000004DDC: 0A00260A
	v_mov_b32_e32 v7, s21                                      // 000000004DE0: 7E0E0215
	v_lshlrev_b64 v[19:20], 2, v[20:21]                        // 000000004DE4: D28F0013 00022882
	v_add_co_u32_e64 v19, s[6:7], s20, v19                     // 000000004DEC: D1190613 00022614
	v_addc_co_u32_e64 v20, s[6:7], v7, v20, s[6:7]             // 000000004DF4: D11C0614 001A2907
	s_nop 0                                                    // 000000004DFC: BF800000
	s_nop 0                                                    // 000000004E00: BF800000
	global_store_dword v[19:20], v0, off offset:96             // 000000004E04: DC708060 007F0013

0000000000004e0c BB1_28:
	s_or_b64 exec, exec, s[8:9]                                // 000000004E0C: 87FE087E
	v_cmp_gt_u32_e64 s[6:7], s17, v5                           // 000000004E10: D0CC0006 00020A11
	s_and_b64 s[8:9], s[4:5], s[6:7]                           // 000000004E18: 86880604
	s_and_saveexec_b64 s[12:13], s[8:9]                        // 000000004E1C: BE8C2008
	s_cbranch_execz BB1_30                                     // 000000004E20: BF880010

0000000000004e24 BB1_29:
	v_mov_b32_e32 v20, 0                                       // 000000004E24: 7E280280
	v_mov_b32_e32 v19, v10                                     // 000000004E28: 7E26030A
	v_mad_u64_u32 v[19:20], s[8:9], v5, s11, v[19:20]          // 000000004E2C: D1E80813 044C1705
	v_mul_f32_e32 v0, s10, v18                                 // 000000004E34: 0A00240A
	v_mov_b32_e32 v7, s21                                      // 000000004E38: 7E0E0215
	v_lshlrev_b64 v[18:19], 2, v[19:20]                        // 000000004E3C: D28F0012 00022682
	v_add_co_u32_e64 v18, s[8:9], s20, v18                     // 000000004E44: D1190812 00022414
	v_addc_co_u32_e64 v19, s[8:9], v7, v19, s[8:9]             // 000000004E4C: D11C0813 00222707
	s_nop 0                                                    // 000000004E54: BF800000
	s_nop 0                                                    // 000000004E58: BF800000
	global_store_dword v[18:19], v0, off                       // 000000004E5C: DC708000 007F0012

0000000000004e64 BB1_30:
	s_or_b64 exec, exec, s[12:13]                              // 000000004E64: 87FE0C7E
	s_and_b64 s[8:9], s[6:7], s[2:3]                           // 000000004E68: 86880206
	s_and_saveexec_b64 s[12:13], s[8:9]                        // 000000004E6C: BE8C2008
	s_cbranch_execz BB1_32                                     // 000000004E70: BF880010

0000000000004e74 BB1_31:
	v_mov_b32_e32 v19, 0                                       // 000000004E74: 7E260280
	v_mov_b32_e32 v18, v10                                     // 000000004E78: 7E24030A
	v_mad_u64_u32 v[18:19], s[8:9], v5, s11, v[18:19]          // 000000004E7C: D1E80812 04481705
	v_mul_f32_e32 v0, s10, v17                                 // 000000004E84: 0A00220A
	v_mov_b32_e32 v7, s21                                      // 000000004E88: 7E0E0215
	v_lshlrev_b64 v[17:18], 2, v[18:19]                        // 000000004E8C: D28F0011 00022482
	v_add_co_u32_e64 v17, s[8:9], s20, v17                     // 000000004E94: D1190811 00022214
	v_addc_co_u32_e64 v18, s[8:9], v7, v18, s[8:9]             // 000000004E9C: D11C0812 00222507
	s_nop 0                                                    // 000000004EA4: BF800000
	s_nop 0                                                    // 000000004EA8: BF800000
	global_store_dword v[17:18], v0, off offset:32             // 000000004EAC: DC708020 007F0011

0000000000004eb4 BB1_32:
	s_or_b64 exec, exec, s[12:13]                              // 000000004EB4: 87FE0C7E
	s_and_b64 s[8:9], s[6:7], s[0:1]                           // 000000004EB8: 86880006
	s_and_saveexec_b64 s[12:13], s[8:9]                        // 000000004EBC: BE8C2008
	s_cbranch_execz BB1_34                                     // 000000004EC0: BF880010

0000000000004ec4 BB1_33:
	v_mov_b32_e32 v18, 0                                       // 000000004EC4: 7E240280
	v_mov_b32_e32 v17, v10                                     // 000000004EC8: 7E22030A
	v_mad_u64_u32 v[17:18], s[8:9], v5, s11, v[17:18]          // 000000004ECC: D1E80811 04441705
	v_mul_f32_e32 v0, s10, v16                                 // 000000004ED4: 0A00200A
	v_mov_b32_e32 v7, s21                                      // 000000004ED8: 7E0E0215
	v_lshlrev_b64 v[16:17], 2, v[17:18]                        // 000000004EDC: D28F0010 00022282
	v_add_co_u32_e64 v16, s[8:9], s20, v16                     // 000000004EE4: D1190810 00022014
	v_addc_co_u32_e64 v17, s[8:9], v7, v17, s[8:9]             // 000000004EEC: D11C0811 00222307
	s_nop 0                                                    // 000000004EF4: BF800000
	s_nop 0                                                    // 000000004EF8: BF800000
	global_store_dword v[16:17], v0, off offset:64             // 000000004EFC: DC708040 007F0010

0000000000004f04 BB1_34:
	s_or_b64 exec, exec, s[12:13]                              // 000000004F04: 87FE0C7E
	s_and_b64 s[6:7], s[6:7], vcc                              // 000000004F08: 86866A06
	s_and_saveexec_b64 s[8:9], s[6:7]                          // 000000004F0C: BE882006
	s_cbranch_execz BB1_36                                     // 000000004F10: BF880010

0000000000004f14 BB1_35:
	v_mov_b32_e32 v17, 0                                       // 000000004F14: 7E220280
	v_mov_b32_e32 v16, v10                                     // 000000004F18: 7E20030A
	v_mad_u64_u32 v[16:17], s[6:7], v5, s11, v[16:17]          // 000000004F1C: D1E80610 04401705
	v_mul_f32_e32 v0, s10, v15                                 // 000000004F24: 0A001E0A
	v_mov_b32_e32 v5, s21                                      // 000000004F28: 7E0A0215
	v_lshlrev_b64 v[15:16], 2, v[16:17]                        // 000000004F2C: D28F000F 00022082
	v_add_co_u32_e64 v15, s[6:7], s20, v15                     // 000000004F34: D119060F 00021E14
	v_addc_co_u32_e64 v16, s[6:7], v5, v16, s[6:7]             // 000000004F3C: D11C0610 001A2105
	s_nop 0                                                    // 000000004F44: BF800000
	s_nop 0                                                    // 000000004F48: BF800000
	global_store_dword v[15:16], v0, off offset:96             // 000000004F4C: DC708060 007F000F

0000000000004f54 BB1_36:
	s_or_b64 exec, exec, s[8:9]                                // 000000004F54: 87FE087E
	v_cmp_gt_u32_e64 s[6:7], s17, v4                           // 000000004F58: D0CC0006 00020811
	s_and_b64 s[8:9], s[4:5], s[6:7]                           // 000000004F60: 86880604
	s_and_saveexec_b64 s[12:13], s[8:9]                        // 000000004F64: BE8C2008
	s_cbranch_execz BB1_38                                     // 000000004F68: BF880010

0000000000004f6c BB1_37:
	v_mov_b32_e32 v16, 0                                       // 000000004F6C: 7E200280
	v_mov_b32_e32 v15, v10                                     // 000000004F70: 7E1E030A
	v_mad_u64_u32 v[15:16], s[8:9], v4, s11, v[15:16]          // 000000004F74: D1E8080F 043C1704
	v_mul_f32_e32 v0, s10, v14                                 // 000000004F7C: 0A001C0A
	v_mov_b32_e32 v5, s21                                      // 000000004F80: 7E0A0215
	v_lshlrev_b64 v[14:15], 2, v[15:16]                        // 000000004F84: D28F000E 00021E82
	v_add_co_u32_e64 v14, s[8:9], s20, v14                     // 000000004F8C: D119080E 00021C14
	v_addc_co_u32_e64 v15, s[8:9], v5, v15, s[8:9]             // 000000004F94: D11C080F 00221F05
	s_nop 0                                                    // 000000004F9C: BF800000
	s_nop 0                                                    // 000000004FA0: BF800000
	global_store_dword v[14:15], v0, off                       // 000000004FA4: DC708000 007F000E

0000000000004fac BB1_38:
	s_or_b64 exec, exec, s[12:13]                              // 000000004FAC: 87FE0C7E
	s_and_b64 s[8:9], s[6:7], s[2:3]                           // 000000004FB0: 86880206
	s_and_saveexec_b64 s[12:13], s[8:9]                        // 000000004FB4: BE8C2008
	s_cbranch_execz BB1_40                                     // 000000004FB8: BF880010

0000000000004fbc BB1_39:
	v_mov_b32_e32 v15, 0                                       // 000000004FBC: 7E1E0280
	v_mov_b32_e32 v14, v10                                     // 000000004FC0: 7E1C030A
	v_mad_u64_u32 v[14:15], s[8:9], v4, s11, v[14:15]          // 000000004FC4: D1E8080E 04381704
	v_mul_f32_e32 v0, s10, v13                                 // 000000004FCC: 0A001A0A
	v_mov_b32_e32 v5, s21                                      // 000000004FD0: 7E0A0215
	v_lshlrev_b64 v[13:14], 2, v[14:15]                        // 000000004FD4: D28F000D 00021C82
	v_add_co_u32_e64 v13, s[8:9], s20, v13                     // 000000004FDC: D119080D 00021A14
	v_addc_co_u32_e64 v14, s[8:9], v5, v14, s[8:9]             // 000000004FE4: D11C080E 00221D05
	s_nop 0                                                    // 000000004FEC: BF800000
	s_nop 0                                                    // 000000004FF0: BF800000
	global_store_dword v[13:14], v0, off offset:32             // 000000004FF4: DC708020 007F000D

0000000000004ffc BB1_40:
	s_or_b64 exec, exec, s[12:13]                              // 000000004FFC: 87FE0C7E
	s_and_b64 s[8:9], s[6:7], s[0:1]                           // 000000005000: 86880006
	s_and_saveexec_b64 s[12:13], s[8:9]                        // 000000005004: BE8C2008
	s_cbranch_execz BB1_42                                     // 000000005008: BF880010

000000000000500c BB1_41:
	v_mov_b32_e32 v14, 0                                       // 00000000500C: 7E1C0280
	v_mov_b32_e32 v13, v10                                     // 000000005010: 7E1A030A
	v_mad_u64_u32 v[13:14], s[8:9], v4, s11, v[13:14]          // 000000005014: D1E8080D 04341704
	v_mul_f32_e32 v0, s10, v12                                 // 00000000501C: 0A00180A
	v_mov_b32_e32 v5, s21                                      // 000000005020: 7E0A0215
	v_lshlrev_b64 v[11:12], 2, v[13:14]                        // 000000005024: D28F000B 00021A82
	v_add_co_u32_e64 v11, s[8:9], s20, v11                     // 00000000502C: D119080B 00021614
	v_addc_co_u32_e64 v12, s[8:9], v5, v12, s[8:9]             // 000000005034: D11C080C 00221905
	s_nop 0                                                    // 00000000503C: BF800000
	s_nop 0                                                    // 000000005040: BF800000
	global_store_dword v[11:12], v0, off offset:64             // 000000005044: DC708040 007F000B

000000000000504c BB1_42:
	s_or_b64 exec, exec, s[12:13]                              // 00000000504C: 87FE0C7E
	s_and_b64 s[6:7], s[6:7], vcc                              // 000000005050: 86866A06
	s_and_saveexec_b64 s[8:9], s[6:7]                          // 000000005054: BE882006
	s_cbranch_execz BB1_44                                     // 000000005058: BF880010

000000000000505c BB1_43:
	v_mov_b32_e32 v11, v10                                     // 00000000505C: 7E16030A
	v_mov_b32_e32 v12, 0                                       // 000000005060: 7E180280
	v_mad_u64_u32 v[4:5], s[6:7], v4, s11, v[11:12]            // 000000005064: D1E80604 042C1704
	v_mov_b32_e32 v7, s21                                      // 00000000506C: 7E0E0215
	v_mul_f32_e32 v0, s10, v9                                  // 000000005070: 0A00120A
	v_lshlrev_b64 v[4:5], 2, v[4:5]                            // 000000005074: D28F0004 00020882
	v_add_co_u32_e64 v4, s[6:7], s20, v4                       // 00000000507C: D1190604 00020814
	v_addc_co_u32_e64 v5, s[6:7], v7, v5, s[6:7]               // 000000005084: D11C0605 001A0B07
	s_nop 0                                                    // 00000000508C: BF800000
	s_nop 0                                                    // 000000005090: BF800000
	global_store_dword v[4:5], v0, off offset:96               // 000000005094: DC708060 007F0004

000000000000509c BB1_44:
	s_or_b64 exec, exec, s[8:9]                                // 00000000509C: 87FE087E
	v_cmp_gt_u32_e64 s[6:7], s17, v1                           // 0000000050A0: D0CC0006 00020211
	s_and_b64 s[4:5], s[4:5], s[6:7]                           // 0000000050A8: 86840604
	s_and_saveexec_b64 s[8:9], s[4:5]                          // 0000000050AC: BE882004
	s_cbranch_execz BB1_46                                     // 0000000050B0: BF880010

00000000000050b4 BB1_45:
	v_mov_b32_e32 v5, 0                                        // 0000000050B4: 7E0A0280
	v_mov_b32_e32 v4, v10                                      // 0000000050B8: 7E08030A
	v_mad_u64_u32 v[4:5], s[4:5], v1, s11, v[4:5]              // 0000000050BC: D1E80404 04101701
	v_mov_b32_e32 v7, s21                                      // 0000000050C4: 7E0E0215
	v_mul_f32_e32 v0, s10, v8                                  // 0000000050C8: 0A00100A
	v_lshlrev_b64 v[4:5], 2, v[4:5]                            // 0000000050CC: D28F0004 00020882
	v_add_co_u32_e64 v4, s[4:5], s20, v4                       // 0000000050D4: D1190404 00020814
	v_addc_co_u32_e64 v5, s[4:5], v7, v5, s[4:5]               // 0000000050DC: D11C0405 00120B07
	s_nop 0                                                    // 0000000050E4: BF800000
	s_nop 0                                                    // 0000000050E8: BF800000
	global_store_dword v[4:5], v0, off                         // 0000000050EC: DC708000 007F0004

00000000000050f4 BB1_46:
	s_or_b64 exec, exec, s[8:9]                                // 0000000050F4: 87FE087E
	s_and_b64 s[2:3], s[6:7], s[2:3]                           // 0000000050F8: 86820206
	s_and_saveexec_b64 s[4:5], s[2:3]                          // 0000000050FC: BE842002
	s_cbranch_execz BB1_48                                     // 000000005100: BF880010

0000000000005104 BB1_47:
	v_mov_b32_e32 v5, 0                                        // 000000005104: 7E0A0280
	v_mov_b32_e32 v4, v10                                      // 000000005108: 7E08030A
	v_mad_u64_u32 v[4:5], s[2:3], v1, s11, v[4:5]              // 00000000510C: D1E80204 04101701
	v_mul_f32_e32 v0, s10, v6                                  // 000000005114: 0A000C0A
	v_mov_b32_e32 v6, s21                                      // 000000005118: 7E0C0215
	v_lshlrev_b64 v[4:5], 2, v[4:5]                            // 00000000511C: D28F0004 00020882
	v_add_co_u32_e64 v4, s[2:3], s20, v4                       // 000000005124: D1190204 00020814
	v_addc_co_u32_e64 v5, s[2:3], v6, v5, s[2:3]               // 00000000512C: D11C0205 000A0B06
	s_nop 0                                                    // 000000005134: BF800000
	s_nop 0                                                    // 000000005138: BF800000
	global_store_dword v[4:5], v0, off offset:32               // 00000000513C: DC708020 007F0004

0000000000005144 BB1_48:
	s_or_b64 exec, exec, s[4:5]                                // 000000005144: 87FE047E
	s_and_b64 s[0:1], s[6:7], s[0:1]                           // 000000005148: 86800006
	s_and_saveexec_b64 s[2:3], s[0:1]                          // 00000000514C: BE822000
	s_cbranch_execz BB1_50                                     // 000000005150: BF880010

0000000000005154 BB1_49:
	v_mov_b32_e32 v5, 0                                        // 000000005154: 7E0A0280
	v_mov_b32_e32 v4, v10                                      // 000000005158: 7E08030A
	v_mad_u64_u32 v[4:5], s[0:1], v1, s11, v[4:5]              // 00000000515C: D1E80004 04101701
	v_mul_f32_e32 v0, s10, v2                                  // 000000005164: 0A00040A
	v_mov_b32_e32 v2, s21                                      // 000000005168: 7E040215
	v_lshlrev_b64 v[4:5], 2, v[4:5]                            // 00000000516C: D28F0004 00020882
	v_add_co_u32_e64 v4, s[0:1], s20, v4                       // 000000005174: D1190004 00020814
	v_addc_co_u32_e64 v5, s[0:1], v2, v5, s[0:1]               // 00000000517C: D11C0005 00020B02
	s_nop 0                                                    // 000000005184: BF800000
	s_nop 0                                                    // 000000005188: BF800000
	global_store_dword v[4:5], v0, off offset:64               // 00000000518C: DC708040 007F0004

0000000000005194 BB1_50:
	s_or_b64 exec, exec, s[2:3]                                // 000000005194: 87FE027E
	s_and_b64 s[0:1], s[6:7], vcc                              // 000000005198: 86806A06
	s_and_saveexec_b64 s[2:3], s[0:1]                          // 00000000519C: BE822000
	s_cbranch_execz BB1_52                                     // 0000000051A0: BF88000D

00000000000051a4 BB1_51:
	v_mov_b32_e32 v11, 0                                       // 0000000051A4: 7E160280
	v_mad_u64_u32 v[0:1], s[0:1], v1, s11, v[10:11]            // 0000000051A8: D1E80000 04281701
	v_mul_f32_e32 v2, s10, v3                                  // 0000000051B0: 0A04060A
	v_mov_b32_e32 v3, s21                                      // 0000000051B4: 7E060215
	v_lshlrev_b64 v[0:1], 2, v[0:1]                            // 0000000051B8: D28F0000 00020082
	v_add_co_u32_e32 v0, vcc, s20, v0                          // 0000000051C0: 32000014
	v_addc_co_u32_e32 v1, vcc, v3, v1, vcc                     // 0000000051C4: 38020303
	s_nop 0                                                    // 0000000051C8: BF800000
	s_nop 0                                                    // 0000000051CC: BF800000
	global_store_dword v[0:1], v2, off offset:96               // 0000000051D0: DC708060 007F0200

00000000000051d8 BB1_52:
	s_endpgm                                                   // 0000000051D8: BF810000
